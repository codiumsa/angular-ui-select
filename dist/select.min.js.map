<<<<<<< Updated upstream
{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["KEY","TAB","ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","MAP","91","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","43","44","45","46","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","isControl","e","k","which","metaKey","ctrlKey","altKey","isFunctionKey","isVerticalMovement","indexOf","isHorizontalMovement","toSeparator","sep","undefined","angular","element","prototype","querySelectorAll","selector","this","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","searchEnabled","sortable","placeholder","refreshDelay","closeOnSelect","skipFocusser","dropdownPosition","removeSelected","generateId","appendToBody","service","minErr","$$minErr","error","apply","arguments","message","replace","RegExp","Error","directive","link","scope","attrs","ctrl","transclude","clone","append","filter","escapeRegexp","queryToEscape","matchItem","query","factory","$document","$window","boundingClientRect","getBoundingClientRect","width","prop","height","top","pageYOffset","documentElement","scrollTop","left","pageXOffset","scrollLeft","uiSelectConfig","RepeatParser","uiSelectMinErr","$compile","restrict","require","templateUrl","tElement","addClass","parent","attr","compile","tAttrs","repeat","groupByExp","groupBy","groupFilterExp","groupFilter","groups","length","getGroupNgRepeatExpression","parserResult","parse","choices","repeatExpression","rowsInner","clickTarget","document","addEventListener","itemName","$select","parseRepeatAttr","disableChoiceExpression","uiDisableChoice","onHighlightCallback","onHighlight","position","toLowerCase","$on","remove","$watch","newValue","open","multiple","activate","activeIndex","tagging","isActivated","minimumInputLength","search","refresh","items","$observe","$eval","controller","$scope","$element","$timeout","$filter","$$uisDebounce","$parse","$injector","_findIndex","collection","predicate","thisArg","findIndex","value","list","Object","i","call","_resetSearchInput","resetSearchInput","EMPTY_SEARCH","selected","item","equals","_groupsFilter","groupNames","j","result","name","push","_updateItemDisabled","isDisabled","disabledItemIndex","disabledItems","splice","_isItemDisabled","_initaliseLockedChoices","doInitalise","_updateItemLocked","isLocked","lockedItemIndex","lockedItems","_isItemlocked","itemScope","itemIndex","lockChoiceExpression","_handleDropDownSelection","key","processed","select","close","_ensureHighlightVisible","container","highlighted","posY","offsetTop","clientHeight","offsetHeight","isGrouped","paste","focus","disabled","focusser","fct","taggingTokens","tokens","clickTriggeredSelect","$animate","get","err","searchInput","isEmpty","isUndefined","initSearchValue","avoidReset","$broadcast","taggingLabel","on","enabled","animateHandler","phase","off","focusSearchInput","findGroupByName","group","repeatAttr","updateGroups","groupFn","forEach","groupName","isFunction","groupFilterFn","isArray","concat","setPlainItems","setItemsFn","itemProperty","originalSource","source","createArrayFromObject","origSrc","$uisSource","keys","map","v","keyName","filters","newVal","oldVal","refreshItems","data","selectedItems","filteredItems","every","selectedItem","calculateDropdownPos","$watchCollection","isDefined","ngModel","$modelValue","_refreshDelayPromise","refreshAttr","cancel","isActive","_isItemSelected","selection","isTag","$event","trim","locals","onSelectCallback","$item","$model","modelMapper","type","$setTouched","setFocus","focusInput","clear","stopPropagation","toggle","preventDefault","sizeWatch","updaterScheduled","sizeSearchInput","input","calculateContainerWidth","clientWidth","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","css","$$postDigest","noop","$apply","tagged","keyCode","triggerHandler","newItem","window","clipboardData","getData","originalEvent","separator","split","oldsearch","onResize","uisOffset","controllerAs","match","exec","ngClass","combined","removeAttr","inputId","id","ctrls","transcludeFn","onDocumentClick","contains","jQuery","target","focusableControls","targetController","tagName","$digest","positionDropdown","offset","style","after","originalWidth","find","resetDropdown","replaceWith","generatedId","baseTitle","title","focusserTitle","focusserId","onSelect","onMatchClickCallback","onMatchClick","onRemoveCallback","onRemove","choiceGrouped","tabindex","limit","parseInt","taggingEval","autofocus","focusOn","transcluded","transcludedMatch","transcludedChoices","transcludedNoChoice","isOpen","dropdown","directionUpClassName","setDropdownPosUp","offsetDropdown","setDropdownPosDown","removeClass","calculateDropdownPosAfterAnimation","body","opacity","opened","needsCalculated","getAttribute","attribute","hasAttribute","multi","setAllowClear","allow","allowClear","uiLockChoice","$evalAsync","activeMatchIndex","updateModel","$setViewValue","Date","now","refreshComponent","setActiveMatch","index","removeChoice","removedChoice","getPlaceholder","_getCaretPosition","el","isNumber","selectionStart","_handleMatchSelection","getNewActiveMatchIndex","$selectMultiple","prev","last","curr","next","caretPosition","first","newIndex","Math","min","max","_findCaseInsensitiveDupe","arr","hasDupe","origItem","toUpperCase","_findApproxDupe","haystack","needle","dupeIndex","tempArr","copy","mockObj","isObject","$isEmpty","$parsers","unshift","resultMultiple","$formatters","inputValue","checkFnMultiple","p","trackByExp","propsItemNameMatches","oldValue","$render","$viewValue","event","tagItems","tagItem","stashArr","hasTag","slice","some","itemsWithoutTag","checkFnSingle","d","val","uiSelectSort","$ngModel","options","extend","axis","uiSelectSortOptions","draggingClassName","droppingClassName","droppingBeforeClassName","droppingAfterClassName","dataTransfer","setData","$index","toString","dropTimeout","move","from","to","className","dragOverHandler","offsetY","layerY","offsetX","layerX","dropHandler","droppedItemIndex","_dropHandler","theList","itemToMove","hasClass","$emit","array","callback","debounceTime","timeoutPromise","self","args","Array","expression","filterMatch","grouped","run","$templateCache","put"],"mappings":"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","file":"select.min.js","sourcesContent":["/*!\n * ui-select\n * http://github.com/angular-ui/ui-select\n * Version: 0.18.1 - 2016-07-18T20:09:40.300Z\n * License: MIT\n */\n\n\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n        case KEY.ALT:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey || e.altKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  removeSelected: true,\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-choices');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/choices.tpl.html';\n    },\n\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      // var repeat = RepeatParser.parse(attrs.repeat);\n      var groupByExp = tAttrs.groupBy;\n      var groupFilterExp = tAttrs.groupFilter;\n\n      if (groupByExp) {\n        var groups = tElement.querySelectorAll('.ui-select-choices-group');\n        if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n        groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n      }\n\n      var parserResult = RepeatParser.parse(tAttrs.repeat);\n\n      var choices = tElement.querySelectorAll('.ui-select-choices-row');\n      if (choices.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n      }\n\n      choices.attr('ng-repeat', parserResult.repeatExpression(groupByExp))\n             .attr('ng-if', '$select.open'); //Prevent unnecessary watches when dropdown is closed\n    \n\n      var rowsInner = tElement.querySelectorAll('.ui-select-choices-row-inner');\n      if (rowsInner.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n      }\n      rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n\n      // If IE8 then need to target rowsInner to apply the ng-click attr as choices will not capture the event. \n      var clickTarget = $window.document.addEventListener ? choices : rowsInner;\n      clickTarget.attr('ng-click', '$select.select(' + parserResult.itemName + ',$select.skipFocusser,$event)');\n      \n      return function link(scope, element, attrs, $select) {\n\n       \n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n\n        $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;        \n\n        scope.$on('$destroy', function() {\n          choices.remove();\n        });\n\n        scope.$watch('$select.search', function(newValue) {\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            $select.refresh(attrs.refresh);\n          } else {\n            $select.items = [];\n          }\n        });\n\n        attrs.$observe('refreshDelay', function() {\n          // $eval() is needed otherwise we get a string instead of a number\n          var refreshDelay = scope.$eval(attrs.refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n      };\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$injector', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $injector, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n\n  ctrl.removeSelected = uiSelectConfig.removeSelected; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.resetSearchInput = true;\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n  ctrl.$element = $element;\n\n  // Use $injector to check for $animate and store a reference to it\n  ctrl.$animate = (function () {\n    try {\n      return $injector.get('$animate');\n    } catch (err) {\n      // $animate does not exist\n      return null;\n    }\n  })();\n\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  ctrl.isEmpty = function() {\n    return angular.isUndefined(ctrl.selected) || ctrl.selected === null || ctrl.selected === '' || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput || (ctrl.resetSearchInput === undefined && uiSelectConfig.resetSearchInput)) {\n      ctrl.search = EMPTY_SEARCH;\n      //reset activeIndex\n      if (ctrl.selected && ctrl.items.length && !ctrl.multiple) {\n        ctrl.activeIndex = _findIndex(ctrl.items, function(item){\n          return angular.equals(this, item);\n        }, ctrl.selected);\n      }\n    }\n  }\n\n    function _groupsFilter(groups, groupNames) {\n      var i, j, result = [];\n      for(i = 0; i < groupNames.length ;i++){\n        for(j = 0; j < groups.length ;j++){\n          if(groups[j].name == [groupNames[i]]){\n            result.push(groups[j]);\n          }\n        }\n      }\n      return result;\n    }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(initSearchValue, avoidReset) {\n    if (!ctrl.disabled  && !ctrl.open) {\n      if(!avoidReset) _resetSearchInput();\n\n      $scope.$broadcast('uis:activate');\n\n      ctrl.open = true;\n\n      ctrl.activeIndex = ctrl.activeIndex >= ctrl.items.length ? 0 : ctrl.activeIndex;\n\n      // ensure that the index is set to zero for tagging variants\n      // that where first option is auto-selected\n      if ( ctrl.activeIndex === -1 && ctrl.taggingLabel !== false ) {\n        ctrl.activeIndex = 0;\n      }\n\n      var container = $element.querySelectorAll('.ui-select-choices-content');\n      var searchInput = $element.querySelectorAll('.ui-select-search');\n      if (ctrl.$animate && ctrl.$animate.on && ctrl.$animate.enabled(container[0])) {\n        var animateHandler = function(elem, phase) {\n          if (phase === 'start' && ctrl.items.length === 0) {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('removeClass', searchInput[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          } else if (phase === 'close') {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('enter', container[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          }\n        };\n\n        if (ctrl.items.length > 0) {\n          ctrl.$animate.on('enter', container[0], animateHandler);\n        } else {\n          ctrl.$animate.on('removeClass', searchInput[0], animateHandler);\n        }\n      } else {\n        $timeout(function () {\n          ctrl.focusSearchInput(initSearchValue);\n          if(!ctrl.tagging.isActivated && ctrl.items.length > 1) {\n            _ensureHighlightVisible();\n          }\n        });\n      }\n    }\n  };\n\n  ctrl.focusSearchInput = function (initSearchValue) {\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n  };\n\n  ctrl.findGroupByName = function(name) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.groups = [];\n      angular.forEach(items, function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if(group) {\n          group.items.push(item);\n        }\n        else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n      if(groupFilterExp){\n        var groupFilterFn = $scope.$eval(groupFilterExp);\n        if( angular.isFunction(groupFilterFn)){\n          ctrl.groups = groupFilterFn(ctrl.groups);\n        } else if(angular.isArray(groupFilterFn)){\n          ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n        }\n      }\n      ctrl.items = [];\n      ctrl.groups.forEach(function(group) {\n        ctrl.items = ctrl.items.concat(group.items);\n      });\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items;\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function(){\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    ctrl.refreshItems = function (data){\n      data = data || ctrl.parserResult.source($scope);\n      var selectedItems = ctrl.selected;\n      //TODO should implement for single mode removeSelected\n      if (ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length) || !ctrl.multiple || !ctrl.removeSelected) {\n        ctrl.setItemsFn(data);\n      }else{\n        if ( data !== undefined && data !== null ) {\n          var filteredItems = data.filter(function(i) {\n            return angular.isArray(selectedItems) ? selectedItems.every(function(selectedItem) {\n              return !angular.equals(i, selectedItem);\n            }) : !angular.equals(i, selectedItems);\n          });\n          ctrl.setItemsFn(filteredItems);\n        }\n      }\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n\n      $scope.$broadcast('uis:refresh');\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n    $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else {\n        if (!angular.isArray(items)) {\n          throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n        } else {\n          //Remove already selected items (ex: while searching)\n          //TODO Should add a test\n          ctrl.refreshItems(items);\n\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ctrl.ngModel.$modelValue)) {\n            ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n        }\n      }\n    });\n\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        $scope.$eval(refreshAttr);\n      }, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || itemIndex < 0 ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  var _isItemSelected = function (item) {\n    return (ctrl.selected && angular.isArray(ctrl.selected) &&\n        ctrl.selected.filter(function (selection) { return angular.equals(selection, item); }).length > 0);\n  };\n\n  var disabledItems = [];\n\n  function _updateItemDisabled(item, isDisabled) {\n    var disabledItemIndex = disabledItems.indexOf(item);\n    if (isDisabled && disabledItemIndex === -1) {\n      disabledItems.push(item);\n    }\n\n    if (!isDisabled && disabledItemIndex > -1) {\n      disabledItems.splice(disabledItemIndex, 0);\n    }\n  }\n\n  function _isItemDisabled(item) {\n    return disabledItems.indexOf(item) > -1;\n  }\n  \n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var item = itemScope[ctrl.itemProperty];\n    var itemIndex = ctrl.items.indexOf(item);\n    var isDisabled = false;\n    \n    if (itemIndex >= 0 && (angular.isDefined(ctrl.disableChoiceExpression) || ctrl.multiple)) {\n\n      if (item.isTag) return false;\n\n      if (ctrl.multiple) {\n        isDisabled = _isItemSelected(item);\n      }\n\n      if (!isDisabled && angular.isDefined(ctrl.disableChoiceExpression)) {\n        isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression));\n      }\n      \n      _updateItemDisabled(item, isDisabled);\n    }\n\n    return isDisabled;\n  };\n\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  ctrl.select = function(item, skipFocusser, $event) {\n    if (item === undefined || !_isItemDisabled(item)) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !_isItemDisabled(item)) {\n        if(ctrl.tagging.isActivated) {\n          // if taggingLabel is disabled and item is undefined we pull from ctrl.search\n          if ( ctrl.taggingLabel === false ) {\n            if ( ctrl.activeIndex < 0 ) {\n              if (item === undefined) {\n                item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              }\n              if (!item || angular.equals( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined ) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if (_isItemSelected(item)) {\n            ctrl.close(skipFocusser);\n            return;\n          }\n        }\n\n        $scope.$broadcast('uis:select', item);\n\n        var locals = {};\n        locals[ctrl.parserResult.itemName] = item;\n\n        $timeout(function(){\n          ctrl.onSelectCallback($scope, {\n            $item: item,\n            $model: ctrl.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        if (ctrl.closeOnSelect) {\n          ctrl.close(skipFocusser);\n        }\n        if ($event && $event.type === 'click') {\n          ctrl.clickTriggeredSelect = true;\n        }\n      }\n    }\n  };\n\n  // Closes the dropdown\n  ctrl.close = function(skipFocusser) {\n    if (!ctrl.open) return;\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    _resetSearchInput();\n    ctrl.open = false;\n\n    $scope.$broadcast('uis:close', skipFocusser);\n\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(undefined);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      ctrl.activate();\n    }\n  };\n\n  // Set default function for locked choices - avoids unnecessary \n  // logic if functionality is not being used\n  ctrl.isLocked = function () {\n    return false;\n  };\n\n  $scope.$watch(function () {\n    return angular.isDefined(ctrl.lockChoiceExpression) && ctrl.lockChoiceExpression !== \"\";\n  }, _initaliseLockedChoices);\n\n  function _initaliseLockedChoices(doInitalise) {\n    if(!doInitalise) return;\n    \n    var lockedItems = [];\n\n    function _updateItemLocked(item, isLocked) {\n      var lockedItemIndex = lockedItems.indexOf(item);\n      if (isLocked && lockedItemIndex === -1) {\n        lockedItems.push(item);\n        }\n\n      if (!isLocked && lockedItemIndex > -1) {\n        lockedItems.splice(lockedItemIndex, 0);\n      }\n    }\n\n    function _isItemlocked(item) {\n      return lockedItems.indexOf(item) > -1;\n    }\n\n    ctrl.isLocked = function (itemScope, itemIndex) {\n      var isLocked = false,\n          item = ctrl.selected[itemIndex];\n\n      if(item) {\n        if (itemScope) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression));\n          _updateItemLocked(item, isLocked);\n        } else {\n          isLocked = _isItemlocked(item);\n        }\n      }\n\n      return isLocked;\n    };\n  }\n  \n\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.sizeSearchInput = function() {\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.searchInput.parent().parent()[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft - 10;\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth+'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        }, angular.noop);\n      }\n    });\n  };\n\n  function _handleDropDownSelection(key) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) { ctrl.activeIndex++; }\n        break;\n      case KEY.UP:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex > 0 || (ctrl.search.length === 0 && ctrl.tagging.isActivated && ctrl.activeIndex > -1)) { ctrl.activeIndex--; }\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) ctrl.select(ctrl.items[ctrl.activeIndex], true);\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        ctrl.close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  // Bind to keyboard shortcuts\n  ctrl.searchInput.on('keydown', function(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC].indexOf(key)){\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    // if(~[KEY.ESC,KEY.TAB].indexOf(key)){\n    //   //TODO: SEGURO?\n    //   ctrl.close();\n    // }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        _handleDropDownSelection(key);\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) ctrl.select(newItem, true);\n            });\n          }\n        }\n      }\n\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      _ensureHighlightVisible();\n    }\n\n    if (key === KEY.ENTER || key === KEY.ESC) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n  });\n\n  ctrl.searchInput.on('paste', function (e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = [];\n        for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n          var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n          if (data.indexOf(separator) > -1) {\n            items = data.split(separator);\n            break;  // only split by one token\n          }\n        }\n        if (items.length === 0) {\n          items = [data];\n        }\n        var oldsearch = ctrl.search;\n        angular.forEach(items, function (item) {\n          var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n          if (newItem) {\n            ctrl.select(newItem, true);\n          }\n        });\n        ctrl.search = oldsearch || EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  });\n\n  ctrl.searchInput.on('tagged', function() {\n    $timeout(function() {\n      _resetSearchInput();\n    });\n  });\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    if (ctrl.activeIndex < 0) {\n      return;\n    }\n\n    var highlighted = choices[ctrl.activeIndex];\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0)\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      else\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n    }\n  }\n\n  var onResize = $$uisDebounce(function() {\n    ctrl.sizeSearchInput();\n  }, 50);\n\n  angular.element($window).bind('resize', onResize);\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n    angular.element($window).off('resize', onResize);\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$compile', '$parse', '$timeout',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $compile, $parse, $timeout) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onMatchClickCallback = $parse(attrs.onMatchClick);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        scope.$watch(function () { return scope.$eval(attrs.searchEnabled); }, function(newVal) {\n          $select.searchEnabled = newVal !== undefined ? newVal : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('limit', function() {\n          //Limit the number of selections allowed\n          $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n        });\n\n        scope.$watch('removeSelected', function() {\n            var removeSelected = scope.$eval(attrs.removeSelected);\n            $select.removeSelected = removeSelected !== undefined ? removeSelected : uiSelectConfig.removeSelected;\n        });\n\n        attrs.$observe('disabled', function() {\n          // No need to use $eval() (thanks to ng-disabled) since we already get a boolean instead of a string\n          $select.disabled = attrs.disabled !== undefined ? attrs.disabled : false;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)){\n          $timeout(function(){\n            $select.setFocus();\n          });\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)){\n          scope.$on(attrs.focusOn, function() {\n              $timeout(function(){\n                $select.setFocus();\n              });\n          });\n        }\n\n        function onDocumentClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], e.target);\n          } else {\n            contains = element[0].contains(e.target);\n          }\n\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(e.target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(e.target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        // See Click everywhere but here event http://stackoverflow.com/questions/12931369\n        $document.on('click', onDocumentClick);\n\n        scope.$on('$destroy', function() {\n          $document.off('click', onDocumentClick);\n        });\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n          transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n          transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n          if (transcludedNoChoice.length == 1) {\n            element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n          }\n        });\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody !== undefined ? appendToBody : uiSelectConfig.appendToBody) {\n          scope.$watch('$select.open', function(isOpen) {\n            if (isOpen) {\n              positionDropdown();\n            } else {\n              resetDropdown();\n            }\n          });\n\n          // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n          // it might stick around when the user routes away or the select field is otherwise removed\n          scope.$on('$destroy', function() {\n            resetDropdown();\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = offset.left + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function resetDropdown() {\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        // Support changing the direction of the dropdown if there isn't enough space to render it.\n        scope.$watch('$select.open', function() {\n\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n\n        });\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n\n        };\n\n        var calculateDropdownPosAfterAnimation = function() {\n          // Delay positioning the dropdown until all choices have been added so its height is correct.\n          $timeout(function() {\n            if ($select.dropdownPosition === 'up') {\n              //Go UP\n              setDropdownPosUp();\n            } else {\n              //AUTO\n              element.removeClass(directionUpClassName);\n\n              var offset = uisOffset(element);\n              var offsetDropdown = uisOffset(dropdown);\n\n              //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n              var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n              // Determine if the direction of the dropdown needs to be changed.\n              if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                //Go UP\n                setDropdownPosUp(offset, offsetDropdown);\n              }else{\n                //Go DOWN\n                setDropdownPosDown(offset, offsetDropdown);\n              }\n            }\n\n            // Display the dropdown once it has been positioned.\n            dropdown[0].style.opacity = 1;\n          });\n        };\n\n        var opened = false;\n\n        scope.calculateDropdownPos = function() {\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n\n            if (dropdown.length === 0) {\n              return;\n            }\n\n           // Hide the dropdown so there is no flicker until $timeout is done executing.\n           if ($select.search === '' && !opened) {\n              dropdown[0].style.opacity = 0;\n              opened = true;\n           }\n\n            if (!uisOffset(dropdown).height && $select.$animate && $select.$animate.on && $select.$animate.enabled(dropdown)) {\n              var needsCalculated = true;\n\n              $select.$animate.on('enter', dropdown, function (elem, phase) {\n                if (phase === 'close' && needsCalculated) {\n                  calculateDropdownPosAfterAnimation();\n                  needsCalculated = false;\n                }\n              });\n            } else {\n              calculateDropdownPosAfterAnimation();\n            }\n          } else {\n            if (dropdown === null || dropdown.length === 0) {\n              return;\n            }\n\n            // Reset the position of the dropdown.\n            dropdown[0].style.opacity = 0;\n            dropdown[0].style.position = '';\n            dropdown[0].style.top = '';\n            element.removeClass(directionUpClassName);\n          }\n        };\n      };\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      var parent = tElement.parent();\n      // Gets theme attribute from parent (ui-select)\n      var theme = getAttribute(parent, 'theme') || uiSelectConfig.theme;\n      var multi = angular.isDefined(getAttribute(parent, 'multiple'));\n\n      return theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');      \n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      function setAllowClear(allow) {\n        $select.allowClear = (angular.isDefined(allow)) ? (allow === '') ? true : (allow.toLowerCase() === 'true') : false;\n      }\n\n      attrs.$observe('allowClear', setAllowClear);\n      setAllowClear(attrs.allowClear);\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout', function(uiSelectMinErr, $timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        if($select.refreshItems){\n          $select.refreshItems();\n        }\n        if($select.sizeSearchInput){\n          $select.sizeSearchInput();\n        }\n      };\n\n      //sets selected match index as new activeMatchIndex and triggers callback\n      ctrl.setActiveMatch = function(index) {\n        ctrl.activeMatchIndex = index;\n        var item = $select.selected[ctrl.activeMatchIndex];\n        if(item) {\n          var locals = {};\n          locals[$select.parserResult.itemName] = item;\n          $timeout(function () {\n            $select.onMatchClickCallback($scope, {\n              $item: item,\n              $model: $select.parserResult.modelMapper($scope, locals)\n            });\n          });\n        }\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        // if the choice is locked, don't remove it\n        if($select.isLocked(null, index)) return false;\n\n        var removedChoice = $select.selected[index];\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n        return true;\n      };\n\n      ctrl.getPlaceholder = function(){\n        //Refactor single?\n        if($select.selected && $select.selected.length) return;\n        return $select.placeholder;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          resultMultiple.unshift(result);\n        }\n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if(angular.isUndefined(ngModel.$viewValue) || ngModel.$viewValue === null){\n            ngModel.$viewValue = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        });\n      });\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                if($selectMultiple.removeChoice(curr)) {\n                  return prev;\n                } else {\n                  return curr;\n                }\n                \n              } else {\n                // If nothing yet selected, select last item\n                return last;  \n              }              \n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      $select.searchInput.on('keyup', function(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      });\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      $select.searchInput.on('blur', function() {\n        $timeout(function() {\n          $select.searchInput[0].value = \"\";\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      });\n\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Needed so the uiSelect can detect the transcluded content\n                tElement.addClass('ui-select-no-choice');\n      \n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\n\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        var locals = {},\n            result;\n        locals[$select.parserResult.itemName] = inputValue;\n        result = $select.parserResult.modelMapper(scope, locals);\n        return result;\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result === inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n\n      //Input that will handle focus\n      $select.focusInput = focusser;\n\n      element.parent().append(focusser);\n      focusser.bind(\"focus\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n      focusser.bind(\"blur\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n      focusser.bind(\"keydown\", function(e){\n\n        if (e.which === KEY.BACKSPACE) {\n          e.preventDefault();\n          e.stopPropagation();\n          $select.select(undefined);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          e.preventDefault();\n          e.stopPropagation();\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.bind(\"keyup input\", function(e){\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n\n      });\n\n\n    }\n  };\n}]);\n\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: ['^^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var $select = ctrls[0];\n      var $ngModel = ctrls[1];\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var removeClass = function(className) {\n        angular.forEach($select.$element.querySelectorAll('.' + className), function(el){\n          angular.element(el).removeClass(className);\n        });\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        $ngModel.$setViewValue(Date.now());\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups track by $group.name';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content ui-select-dropdown dropdown-menu\\\" role=\\\"listbox\\\" ng-show=\\\"$select.open && $select.items.length > 0\\\"><li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"><div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div><div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\" role=\\\"option\\\"><a href=\\\"\\\" class=\\\"ui-select-choices-row-inner\\\"></a></div></li></ul>\");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><span ng-repeat=\\\"$item in $select.selected track by $index\\\"><span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.setActiveMatch($index);\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append=\\\"\\\"></span></span></span></span>\");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open && $select.searchEnabled\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"><span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': $select.allowClear && !$select.isEmpty()}\\\" ng-transclude=\\\"\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i> <a ng-show=\\\"$select.allowClear && !$select.isEmpty() && ($select.disabled !== true)\\\" aria-label=\\\"{{ $select.baseTitle }} clear\\\" style=\\\"margin-right: 10px\\\" ng-click=\\\"$select.clear($event)\\\" class=\\\"btn btn-xs btn-link pull-right\\\"><i class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></i></a></span></div>\");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length == 0\\\"><li ng-transclude=\\\"\\\"></li></ul>\");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"><div><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" ondrop=\\\"return false;\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"form-control ui-select-search\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.searchEnabled && $select.open\\\"><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"><li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group) }\\\"><div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div><ul role=\\\"listbox\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group) }\\\"><li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $select.isActive(this), \\'select2-disabled\\': $select.isDisabled(this)}\\\"><div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div></li></ul></li></ul>\");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-click=\\\"$selectMultiple.setActiveMatch($index);\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span uis-transclude-append=\\\"\\\"></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a></li></span>\");\n$templateCache.put(\"select2/match.tpl.html\",\"<a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude=\\\"\\\"></span> <abbr ng-if=\\\"$select.allowClear && !$select.isEmpty()\\\" class=\\\"select2-search-choice-close\\\" ng-click=\\\"$select.clear($event)\\\"></abbr> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span></a>\");\n$templateCache.put(\"select2/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled}\\\"><ul class=\\\"select2-choices\\\"><span class=\\\"ui-select-match\\\"></span><li class=\\\"select2-search-field\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" ondrop=\\\"return false;\\\"></li></ul><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open || $select.items.length === 0}\\\"><div class=\\\"ui-select-choices\\\"></div></div></div>\");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled, \\'select2-container-active\\': $select.focus, \\'select2-allowclear\\': $select.allowClear && !$select.isEmpty()}\\\"><div class=\\\"ui-select-match\\\"></div><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"select2-search\\\" ng-show=\\\"$select.searchEnabled\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div></div>\");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div ng-show=\\\"$select.open\\\" class=\\\"ui-select-choices ui-select-dropdown selectize-dropdown single\\\"><div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"><div class=\\\"ui-select-choices-group optgroup\\\" role=\\\"listbox\\\"><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div><div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\"><div class=\\\"option ui-select-choices-row-inner\\\" data-selectable=\\\"\\\"></div></div></div></div></div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"$select.searchEnabled && ($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"selectize/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice selectize-dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"selectize-dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.searchEnabled || (!$select.isEmpty() && !$select.open)\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");}]);",null,null],"sourceRoot":"/source/"}
=======
{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["KEY","TAB","ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","MAP","91","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","43","44","45","46","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","isControl","e","k","which","metaKey","ctrlKey","altKey","isFunctionKey","isVerticalMovement","indexOf","isHorizontalMovement","toSeparator","sep","undefined","angular","element","prototype","querySelectorAll","selector","this","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","searchEnabled","sortable","placeholder","refreshDelay","closeOnSelect","skipFocusser","dropdownPosition","generateId","appendToBody","service","minErr","$$minErr","error","apply","arguments","message","replace","RegExp","Error","directive","link","scope","attrs","ctrl","transclude","clone","append","filter","escapeRegexp","queryToEscape","matchItem","query","factory","$document","$window","boundingClientRect","getBoundingClientRect","width","prop","height","top","pageYOffset","documentElement","scrollTop","left","pageXOffset","scrollLeft","uiSelectConfig","RepeatParser","uiSelectMinErr","$compile","restrict","require","templateUrl","tElement","addClass","parent","attr","compile","tAttrs","repeat","groupByExp","groupBy","groupFilterExp","groupFilter","groups","length","getGroupNgRepeatExpression","parserResult","parse","choices","repeatExpression","rowsInner","clickTarget","document","addEventListener","itemName","$select","parseRepeatAttr","disableChoiceExpression","uiDisableChoice","onHighlightCallback","onHighlight","position","toLowerCase","$on","remove","$watch","newValue","open","multiple","activate","activeIndex","tagging","isActivated","minimumInputLength","search","refresh","items","$observe","$eval","controller","$scope","$element","$timeout","$filter","$$uisDebounce","$parse","$injector","_findIndex","collection","predicate","thisArg","findIndex","value","list","Object","i","call","_resetSearchInput","resetSearchInput","EMPTY_SEARCH","selected","item","equals","_groupsFilter","groupNames","j","result","name","push","_handleDropDownSelection","key","processed","select","close","_ensureHighlightVisible","container","highlighted","posY","offsetTop","clientHeight","offsetHeight","isGrouped","paste","removeSelected","focus","disabled","focusser","fct","taggingTokens","tokens","lockChoiceExpression","clickTriggeredSelect","$animate","get","err","searchInput","isEmpty","isUndefined","initSearchValue","avoidReset","$broadcast","taggingLabel","enabled","animateHandler","phase","off","focusSearchInput","on","findGroupByName","group","repeatAttr","updateGroups","groupFn","forEach","groupName","isFunction","groupFilterFn","isArray","concat","setPlainItems","setItemsFn","itemProperty","originalSource","source","createArrayFromObject","origSrc","$uisSource","keys","map","v","keyName","filters","newVal","oldVal","refreshItems","data","selectedItems","filteredItems","every","selectedItem","calculateDropdownPos","$watchCollection","isDefined","ngModel","$modelValue","_refreshDelayPromise","refreshAttr","cancel","isActive","itemScope","itemIndex","isDisabled","_uiSelectChoiceDisabled","$event","trim","selection","locals","onSelectCallback","$item","$model","modelMapper","type","$setTouched","setFocus","focusInput","clear","stopPropagation","toggle","preventDefault","isLocked","_uiSelectChoiceLocked","sizeWatch","updaterScheduled","sizeSearchInput","input","calculateContainerWidth","clientWidth","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","css","noop","$$postDigest","$apply","tagged","keyCode","triggerHandler","newItem","window","clipboardData","getData","originalEvent","separator","split","oldsearch","onResize","uisOffset","controllerAs","match","exec","ngClass","combined","removeAttr","inputId","id","ctrls","transcludeFn","onDocumentClick","contains","jQuery","target","focusableControls","targetController","tagName","$digest","positionDropdown","offset","style","after","originalWidth","find","resetDropdown","replaceWith","generatedId","baseTitle","title","focusserTitle","focusserId","onSelect","onMatchClickCallback","onMatchClick","onRemoveCallback","onRemove","limit","parseInt","choiceGrouped","tabindex","required","ngRequired","$validators","uiRequired","modelValue","viewValue","Array","$validate","taggingEval","autofocus","focusOn","transcluded","transcludedMatch","transcludedChoices","transcludedNoChoice","isOpen","dropdown","directionUpClassName","console","log","setDropdownPosUp","offsetDropdown","setDropdownPosDown","removeClass","opacity","body","getAttribute","attribute","hasAttribute","multi","setAllowClear","allow","allowClear","uiLockChoice","$evalAsync","activeMatchIndex","updateModel","$setViewValue","Date","now","refreshComponent","setActiveMatch","index","removeChoice","removedChoice","splice","getPlaceholder","_getCaretPosition","el","isNumber","selectionStart","_handleMatchSelection","getNewActiveMatchIndex","$selectMultiple","prev","last","curr","next","caretPosition","first","newIndex","Math","min","max","_findCaseInsensitiveDupe","arr","hasDupe","origItem","toUpperCase","_findApproxDupe","haystack","needle","dupeIndex","tempArr","copy","mockObj","isObject","isTag","$isEmpty","$parsers","unshift","resultMultiple","$formatters","inputValue","checkFnMultiple","p","trackByExp","propsItemNameMatches","oldValue","$render","$viewValue","event","tagItems","tagItem","stashArr","hasTag","slice","some","itemsWithoutTag","checkFnSingle","d","val","uiSelectSort","$ngModel","options","extend","axis","uiSelectSortOptions","draggingClassName","droppingClassName","droppingBeforeClassName","droppingAfterClassName","dataTransfer","setData","$index","toString","dropTimeout","move","from","to","className","dragOverHandler","offsetY","layerY","offsetX","layerX","dropHandler","droppedItemIndex","_dropHandler","theList","itemToMove","hasClass","$emit","array","callback","debounceTime","timeoutPromise","self","args","expression","filterMatch","grouped","run","$templateCache","put"],"mappings":";;;;;;CAQC,WACD,YCTA,IAAAA,IACAC,IAAA,EACAC,MAAA,GACAC,IAAA,GACAC,MAAA,GACAC,KAAA,GACAC,GAAA,GACAC,MAAA,GACAC,KAAA,GACAC,MAAA,GACAC,KAAA,GACAC,IAAA,GACAC,QAAA,GACAC,UAAA,GACAC,KAAA,GACAC,IAAA,GACAC,UAAA,EACAC,OAAA,GACAC,QAAA,GAEAC,KAAAC,GAAA,UAAAC,EAAA,YAAAC,EAAA,MAAAC,GAAA,QAAAC,GAAA,QAAAC,GAAA,OAAAC,GAAA,MAAAC,GAAA,aAAAC,GAAA,WAAAC,GAAA,MAAAC,GAAA,QAAAC,GAAA,UAAAC,GAAA,YAAAC,GAAA,MAAAC,GAAA,OAAAC,GAAA,OAAAC,GAAA,KAAAC,GAAA,QAAAC,GAAA,OAAAC,GAAA,IAAAC,GAAA,caAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,KAGAC,UAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAE,KACA,QAAAD,GACA,IAAA3H,GAAAkB,QACA,IAAAlB,GAAAS,MACA,IAAAT,GAAAU,KACA,IAAAV,GAAAW,IACA,OAAA,EAGA,SAAA+G,EAAAG,SAAAH,EAAAI,SAAAJ,EAAAK,SAIAC,cAAA,SAAAL,GAEA,MADAA,GAAAA,EAAAC,MAAAD,EAAAC,MAAAD,EACAA,GAAA,KAAA,KAAAA,GAEAM,mBAAA,SAAAN,GACA,QAAA3H,EAAAM,GAAAN,EAAAQ,MAAA0H,QAAAP,IAEAQ,qBAAA,SAAAR,GACA,QAAA3H,EAAAK,KAAAL,EAAAO,MAAAP,EAAAgB,UAAAhB,EAAAiB,QAAAiH,QAAAP,IAEAS,YAAA,SAAAT,GACA,GAAAU,IAAAnI,MAAA,KAAAD,IAAA,IAAAG,MAAA,KAAAuH,EACA,OAAAU,GAAAA,EAGArI,EAAA2H,GAAAW,OAAAX,GAaAW,UAAAC,QAAAC,QAAAC,UAAAC,mBACAH,QAAAC,QAAAC,UAAAC,iBAAA,SAAAC,GACA,MAAAJ,SAAAC,QAAAI,KAAA,GAAAF,iBAAAC,MAOAL,SAAAC,QAAAC,QAAAC,UAAAI,UACAN,QAAAC,QAAAC,UAAAI,QAAA,SAAAF,GAIA,IAHA,GAAAG,GAAAF,KAAA,GACAG,EAAAD,EAAAE,SAAAF,EAAAG,uBAAAH,EAAAI,oBAAAJ,EAAAK,kBAEAL,GAAA,CACA,GAAAC,EAAAK,KAAAN,GAAAH,GACA,MAAAG,EAEAA,GAAAA,EAAAO,cAGA,OAAA,GAIA,IAAAC,GAAA,EAEAC,EAAAhB,QAAAiB,OAAA,gBAEAC,SAAA,kBACAC,MAAA,YACAC,eAAA,EACAC,UAAA,EACAC,YAAA,GACAC,aAAA,IACAC,eAAA,EACAC,cAAA,EACAC,iBAAA,OACAC,WAAA,WACA,MAAAZ,MAEAa,cAAA,IAIAC,QAAA,iBAAA,WACA,GAAAC,GAAA9B,QAAA+B,SAAA,YACA,OAAA,YACA,GAAAC,GAAAF,EAAAG,MAAA5B,KAAA6B,WACAC,EAAAH,EAAAG,QAAAC,QAAA,GAAAC,QAAA,oCAAA,GACA,OAAA,IAAAC,OAAAH,MAKAI,UAAA,sBAAA,WACA,OACAC,KAAA,SAAAC,EAAAxC,EAAAyC,EAAAC,EAAAC,GACAA,EAAAH,EAAA,SAAAI,GACA5C,EAAA6C,OAAAD,SAYAE,OAAA,YAAA,WACA,QAAAC,GAAAC,GACA,OAAA,GAAAA,GAAAb,QAAA,yBAAA,QAGA,MAAA,UAAAc,EAAAC,GACA,MAAAA,IAAAD,GAAA,GAAAA,GAAAd,QAAA,GAAAC,QAAAW,EAAAG,GAAA,MAAA,+CAAAD,KAUAE,QAAA,aACA,YAAA,UACA,SAAAC,EAAAC,GAEA,MAAA,UAAArD,GACA,GAAAsD,GAAAtD,EAAA,GAAAuD,uBACA,QACAC,MAAAF,EAAAE,OAAAxD,EAAAyD,KAAA,eACAC,OAAAJ,EAAAI,QAAA1D,EAAAyD,KAAA,gBACAE,IAAAL,EAAAK,KAAAN,EAAAO,aAAAR,EAAA,GAAAS,gBAAAC,WACAC,KAAAT,EAAAS,MAAAV,EAAAW,aAAAZ,EAAA,GAAAS,gBAAAI,gBAKAlD,GAAAuB,UAAA,mBACA,iBAAA,kBAAA,iBAAA,WAAA,UACA,SAAA4B,EAAAC,EAAAC,EAAAC,EAAAhB,GAEA,OACAiB,SAAA,KACAC,QAAA,YACApC,SAAA,EACAQ,YAAA,EACA6B,YAAA,SAAAC,GAEAA,EAAAC,SAAA,oBAGA,IAAAxD,GAAAuD,EAAAE,SAAAC,KAAA,UAAAV,EAAAhD,KACA,OAAAA,GAAA,qBAGA2D,QAAA,SAAAJ,EAAAK,GAEA,IAAAA,EAAAC,OAAA,KAAAX,GAAA,SAAA,gCAGA,IAAAY,GAAAF,EAAAG,QACAC,EAAAJ,EAAAK,WAEA,IAAAH,EAAA,CACA,GAAAI,GAAAX,EAAAvE,iBAAA,2BACA,IAAA,IAAAkF,EAAAC,OAAA,KAAAjB,GAAA,OAAA,qDAAAgB,EAAAC,OACAD,GAAAR,KAAA,YAAAT,EAAAmB,8BAGA,GAAAC,GAAApB,EAAAqB,MAAAV,EAAAC,QAEAU,EAAAhB,EAAAvE,iBAAA,yBACA,IAAA,IAAAuF,EAAAJ,OACA,KAAAjB,GAAA,OAAA,mDAAAqB,EAAAJ,OAGAI,GAAAb,KAAA,YAAAW,EAAAG,iBAAAV,IACAJ,KAAA,QAAA,eAGA,IAAAe,GAAAlB,EAAAvE,iBAAA,+BACA,IAAA,IAAAyF,EAAAN,OACA,KAAAjB,GAAA,OAAA,yDAAAuB,EAAAN,OAEAM,GAAAf,KAAA,wBAAA,GAGA,IAAAgB,GAAAvC,EAAAwC,SAAAC,iBAAAL,EAAAE,CAGA,OAFAC,GAAAhB,KAAA,WAAA,kBAAAW,EAAAQ,SAAA,iCAEA,SAAAvD,EAAAxC,EAAAyC,EAAAuD,GAGAA,EAAAC,gBAAAxD,EAAAsC,OAAAC,EAAAE,GAEAc,EAAAE,wBAAAzD,EAAA0D,gBACAH,EAAAI,oBAAA3D,EAAA4D,YAEAL,EAAAvE,iBAAAgB,EAAA6D,SAAA7D,EAAA6D,SAAAC,cAAArC,EAAAzC,iBAEAe,EAAAgE,IAAA,WAAA,WACAf,EAAAgB,WAGAjE,EAAAkE,OAAA,iBAAA,SAAAC,GACAA,IAAAX,EAAAY,MAAAZ,EAAAa,UAAAb,EAAAc,UAAA,GAAA,GACAd,EAAAe,YAAAf,EAAAgB,QAAAC,YAAA,GAAA,GACAxE,EAAAyE,oBAAAlB,EAAAmB,OAAA9B,QAAA5C,EAAAyE,mBACAlB,EAAAoB,QAAA3E,EAAA2E,SAEApB,EAAAqB,WAIA5E,EAAA6E,SAAA,eAAA,WAEA,GAAAhG,GAAAkB,EAAA+E,MAAA9E,EAAAnB,aACA0E,GAAA1E,aAAAxB,SAAAwB,EAAAA,EAAA4C,EAAA5C,qBAaAP,EAAAyG,WAAA,gBACA,SAAA,WAAA,WAAA,UAAA,gBAAA,kBAAA,iBAAA,iBAAA,SAAA,YAAA,UACA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1D,EAAAC,EAAAF,EAAA4D,EAAAC,EAAA1E,GAyDA,QAAA2E,GAAAC,EAAAC,EAAAC,GACA,GAAAF,EAAAG,UACA,MAAAH,GAAAG,UAAAF,EAAAC,EAMA,KAAA,GAFAE,GAFAC,EAAAC,OAAAN,GACA5C,EAAAiD,EAAAjD,SAAA,EAGAmD,EAAA,EAAAnD,EAAAmD,EAAAA,IAEA,GADAH,EAAAC,EAAAE,GACAN,EAAAO,KAAAN,EAAAE,EAAAG,EAAAF,GACA,MAAAE,EAGA,OAAA,GAKA,QAAAE,MACAhG,EAAAiG,kBAAA7I,SAAA4C,EAAAiG,kBAAAzE,EAAAyE,oBACAjG,EAAAyE,OAAAyB,EAEAlG,EAAAmG,UAAAnG,EAAA2E,MAAAhC,SAAA3C,EAAAmE,WACAnE,EAAAqE,YAAAiB,EAAAtF,EAAA2E,MAAA,SAAAyB,GACA,MAAA/I,SAAAgJ,OAAA3I,KAAA0I,IACApG,EAAAmG,YAKA,QAAAG,GAAA5D,EAAA6D,GACA,GAAAT,GAAAU,EAAAC,IACA,KAAAX,EAAA,EAAAA,EAAAS,EAAA5D,OAAAmD,IACA,IAAAU,EAAA,EAAAA,EAAA9D,EAAAC,OAAA6D,IACA9D,EAAA8D,GAAAE,OAAAH,EAAAT,KACAW,EAAAE,KAAAjE,EAAA8D,GAIA,OAAAC,GAgYA,QAAAG,GAAAC,GACA,GAAAC,IAAA,CACA,QAAAD,GACA,IAAA/R,GAAAQ,MACA0K,EAAAkE,MAAAlE,EAAAmE,SAAAnE,EAAAoE,UAAA,GAAA,GACApE,EAAAqE,YAAArE,EAAA2E,MAAAhC,OAAA,GAAA3C,EAAAqE,aACA,MACA,KAAAvP,GAAAM,IACA4K,EAAAkE,MAAAlE,EAAAmE,SAAAnE,EAAAoE,UAAA,GAAA,IACApE,EAAAqE,YAAA,GAAA,IAAArE,EAAAyE,OAAA9B,QAAA3C,EAAAsE,QAAAC,aAAAvE,EAAAqE,YAAA,KAAArE,EAAAqE,aACA,MACA,KAAAvP,GAAAC,IACAiL,EAAAmE,WAAAnE,EAAAkE,MAAAlE,EAAA+G,OAAA/G,EAAA2E,MAAA3E,EAAAqE,cAAA,EACA,MACA,KAAAvP,GAAAE,MACAgL,EAAAkE,OAAAlE,EAAAsE,QAAAC,aAAAvE,EAAAqE,aAAA,GACArE,EAAA+G,OAAA/G,EAAA2E,MAAA3E,EAAAqE,aAAArE,EAAAlB,cAEAkB,EAAAoE,UAAA,GAAA,EAEA,MACA,KAAAtP,GAAAG,IACA+K,EAAAgH,OACA,MACA,SACAF,GAAA,EAEA,MAAAA,GAiHA,QAAAG,KACA,GAAAC,GAAAlC,EAAAxH,iBAAA,8BACAuF,EAAAmE,EAAA1J,iBAAA,yBACA,IAAAuF,EAAAJ,OAAA,EACA,KAAAjB,GAAA,UAAA,0DAAAqB,EAAAJ,OAGA,MAAA3C,EAAAqE,YAAA,GAAA,CAIA,GAAA8C,GAAApE,EAAA/C,EAAAqE,aACA+C,EAAAD,EAAAE,UAAAF,EAAAG,aAAAJ,EAAA,GAAA9F,UACAJ,EAAAkG,EAAA,GAAAK,YAEAH,GAAApG,EACAkG,EAAA,GAAA9F,WAAAgG,EAAApG,EACAoG,EAAAD,EAAAG,eACAtH,EAAAwH,WAAA,IAAAxH,EAAAqE,YACA6C,EAAA,GAAA9F,UAAA,EAEA8F,EAAA,GAAA9F,WAAA+F,EAAAG,aAAAF,IAhoBA,GAAApH,GAAAtC,KAEAwI,EAAA,EA6CA,IA3CAlG,EAAArB,YAAA6C,EAAA7C,YACAqB,EAAAvB,cAAA+C,EAAA/C,cACAuB,EAAAtB,SAAA8C,EAAA9C,SACAsB,EAAApB,aAAA4C,EAAA5C,aACAoB,EAAAyH,MAAAjG,EAAAiG,MAEAzH,EAAA0H,gBAAA,EACA1H,EAAAnB,eAAA,EACAmB,EAAAlB,cAAA,EACAkB,EAAAyE,OAAAyB,EAEAlG,EAAAqE,YAAA,EACArE,EAAA2E,SAEA3E,EAAAkE,MAAA,EACAlE,EAAA2H,OAAA,EACA3H,EAAA4H,UAAA,EACA5H,EAAAmG,SAAA/I,OAEA4C,EAAAjB,iBAAA,OAEAiB,EAAA6H,SAAAzK,OACA4C,EAAAiG,kBAAA,EACAjG,EAAAmE,SAAA/G,OACA4C,EAAAwD,wBAAApG,OACA4C,EAAAsE,SAAAC,aAAA,EAAAuD,IAAA1K,QACA4C,EAAA+H,eAAAxD,aAAA,EAAAyD,OAAA5K,QACA4C,EAAAiI,qBAAA7K,OACA4C,EAAAkI,sBAAA,EACAlI,EAAAkF,QAAAA,EACAlF,EAAAgF,SAAAA,EAGAhF,EAAAmI,SAAA,WACA,IACA,MAAA9C,GAAA+C,IAAA,YACA,MAAAC,GAEA,MAAA,UAIArI,EAAAsI,YAAAtD,EAAAxH,iBAAA,0BACA,IAAAwC,EAAAsI,YAAA3F,OACA,KAAAjB,GAAA,cAAA,mDAAA1B,EAAAsI,YAAA3F,OAGA3C,GAAAuI,QAAA,WACA,MAAAlL,SAAAmL,YAAAxI,EAAAmG,WAAA,OAAAnG,EAAAmG,UAAA,KAAAnG,EAAAmG,UAAAnG,EAAAmE,UAAA,IAAAnE,EAAAmG,SAAAxD,QA+CA3C,EAAAoE,SAAA,SAAAqE,EAAAC,GACA,IAAA1I,EAAA4H,WAAA5H,EAAAkE,KAAA,CACAwE,GAAA1C,IAEAjB,EAAA4D,WAAA,gBAEA3I,EAAAkE,MAAA,EAEAlE,EAAAqE,YAAArE,EAAAqE,aAAArE,EAAA2E,MAAAhC,OAAA,EAAA3C,EAAAqE,YAIA,KAAArE,EAAAqE,aAAArE,EAAA4I,gBAAA,IACA5I,EAAAqE,YAAA,EAGA,IAAA6C,GAAAlC,EAAAxH,iBAAA,8BACA8K,EAAAtD,EAAAxH,iBAAA,oBACA,IAAAwC,EAAAmI,UAAAnI,EAAAmI,SAAAU,QAAA3B,EAAA,IAAA,CACA,GAAA4B,GAAA,SAAAlL,EAAAmL,GACA,UAAAA,GAAA,IAAA/I,EAAA2E,MAAAhC,QAEA3C,EAAAmI,SAAAa,IAAA,cAAAV,EAAA,GAAAQ,GACA7D,EAAA,WACAjF,EAAAiJ,iBAAAR,MAEA,UAAAM,IAEA/I,EAAAmI,SAAAa,IAAA,QAAA9B,EAAA,GAAA4B,GACA7D,EAAA,WACAjF,EAAAiJ,iBAAAR,MAKAzI,GAAA2E,MAAAhC,OAAA,EACA3C,EAAAmI,SAAAe,GAAA,QAAAhC,EAAA,GAAA4B,GAEA9I,EAAAmI,SAAAe,GAAA,cAAAZ,EAAA,GAAAQ,OAGA7D,GAAA,WACAjF,EAAAiJ,iBAAAR,IACAzI,EAAAsE,QAAAC,aAAAvE,EAAA2E,MAAAhC,OAAA,GACAsE,QAOAjH,EAAAiJ,iBAAA,SAAAR,GACAzI,EAAAyE,OAAAgE,GAAAzI,EAAAyE,OACAzE,EAAAsI,YAAA,GAAAX,SAGA3H,EAAAmJ,gBAAA,SAAAzC,GACA,MAAA1G,GAAA0C,QAAA1C,EAAA0C,OAAAtC,OAAA,SAAAgJ,GACA,MAAAA,GAAA1C,OAAAA,IACA,IAGA1G,EAAAuD,gBAAA,SAAA8F,EAAA/G,EAAAE,GACA,QAAA8G,GAAA3E,GACA,GAAA4E,GAAAxE,EAAAF,MAAAvC,EAYA,IAXAtC,EAAA0C,UACArF,QAAAmM,QAAA7E,EAAA,SAAAyB,GACA,GAAAqD,GAAApM,QAAAqM,WAAAH,GAAAA,EAAAnD,GAAAA,EAAAmD,GACAH,EAAApJ,EAAAmJ,gBAAAM,EACAL,GACAA,EAAAzE,MAAAgC,KAAAP,GAGApG,EAAA0C,OAAAiE,MAAAD,KAAA+C,EAAA9E,OAAAyB,OAGA5D,EAAA,CACA,GAAAmH,GAAA5E,EAAAF,MAAArC,EACAnF,SAAAqM,WAAAC,GACA3J,EAAA0C,OAAAiH,EAAA3J,EAAA0C,QACArF,QAAAuM,QAAAD,KACA3J,EAAA0C,OAAA4D,EAAAtG,EAAA0C,OAAAiH,IAGA3J,EAAA2E,SACA3E,EAAA0C,OAAA8G,QAAA,SAAAJ,GACApJ,EAAA2E,MAAA3E,EAAA2E,MAAAkF,OAAAT,EAAAzE,SAIA,QAAAmF,GAAAnF,GACA3E,EAAA2E,MAAAA,EAGA3E,EAAA+J,WAAAzH,EAAAgH,EAAAQ,EAEA9J,EAAA6C,aAAApB,EAAAqB,MAAAuG,GAEArJ,EAAAwH,YAAAlF,EACAtC,EAAAgK,aAAAhK,EAAA6C,aAAAQ,QAIA,IAAA4G,GAAAjK,EAAA6C,aAAAqH,OAGAC,EAAA,WACA,GAAAC,GAAAH,EAAAlF,EACAA,GAAAsF,WAAAxE,OAAAyE,KAAAF,GAAAG,IAAA,SAAAC,GACA,GAAA/D,KAGA,OAFAA,GAAAzG,EAAA6C,aAAA4H,SAAAD,EACA/D,EAAAd,MAAAyE,EAAAI,GACA/D,IAIAzG,GAAA6C,aAAA4H,UACAN,IACAnK,EAAA6C,aAAAqH,OAAA9E,EAAA,aAAApF,EAAA6C,aAAA6H,SACA3F,EAAAf,OAAAiG,EAAA,SAAAU,EAAAC,GACAD,IAAAC,GAAAT,MACA,IAGAnK,EAAA6K,aAAA,SAAAC,GACAA,EAAAA,GAAA9K,EAAA6C,aAAAqH,OAAAnF,EACA,IAAAgG,GAAA/K,EAAAmG,QAEA,IAAAnG,EAAAuI,WAAAlL,QAAAuM,QAAAmB,KAAAA,EAAApI,SAAA3C,EAAA0H,eACA1H,EAAA+J,WAAAe,OAEA,IAAA1N,SAAA0N,EAAA,CACA,GAAAE,GAAAF,EAAA1K,OAAA,SAAA0F,GACA,MAAAiF,GAAAE,MAAA,SAAAC,GACA,OAAA7N,QAAAgJ,OAAAP,EAAAoF,MAGAlL,GAAA+J,WAAAiB,GAGA,SAAAhL,EAAAjB,kBAAA,OAAAiB,EAAAjB,kBACAgG,EAAAoG,wBAKApG,EAAAqG,iBAAApL,EAAA6C,aAAAqH,OAAA,SAAAvF,GACA,GAAAvH,SAAAuH,GAAA,OAAAA,EAIA3E,EAAA2E,aACA,CACA,IAAAtH,QAAAuM,QAAAjF,GACA,KAAAjD,GAAA,QAAA,mCAAAiD,EAIA3E,GAAA6K,aAAAlG,GAGAtH,QAAAgO,UAAArL,EAAAsL,QAAAC,eACAvL,EAAAsL,QAAAC,YAAA,SAQA,IAAAC,EAOAxL,GAAA0E,QAAA,SAAA+G,GACArO,SAAAqO,IAKAD,GACAvG,EAAAyG,OAAAF,GAEAA,EAAAvG,EAAA,WACAF,EAAAF,MAAA4G,IACAzL,EAAApB,gBAIAoB,EAAA2L,SAAA,SAAAC,GACA,IAAA5L,EAAAkE,KACA,OAAA,CAEA,IAAA2H,GAAA7L,EAAA2E,MAAA3H,QAAA4O,EAAA5L,EAAAgK,eACA2B,EAAAE,GAAA7L,EAAAqE,WAEA,QAAAsH,GAAA,EAAAE,GACA,GAGAF,IAAAtO,QAAAmL,YAAAxI,EAAA0D,sBACAkI,EAAA/G,MAAA7E,EAAA0D,qBAGAiI,IAGA3L,EAAA8L,WAAA,SAAAF,GAEA,GAAA5L,EAAAkE,KAAA,CAEA,GAEAkC,GAFAyF,EAAA7L,EAAA2E,MAAA3H,QAAA4O,EAAA5L,EAAAgK,eACA8B,GAAA,CASA,OANAD,IAAA,IAAAxO,QAAAmL,YAAAxI,EAAAwD,2BACA4C,EAAApG,EAAA2E,MAAAkH,GACAC,IAAAF,EAAA/G,MAAA7E,EAAAwD,yBACA4C,EAAA2F,wBAAAD,GAGAA,IAKA9L,EAAA+G,OAAA,SAAAX,EAAAtH,EAAAkN,GACA,GAAA5O,SAAAgJ,IAAAA,EAAA2F,wBAAA,CAEA,IAAA/L,EAAA2E,QAAA3E,EAAAyE,SAAAzE,EAAAsE,QAAAC,YAAA,MAEA,KAAA6B,IAAAA,EAAA2F,wBAAA,CACA,GAAA/L,EAAAsE,QAAAC,YAAA,CAEA,GAAAvE,EAAA4I,gBAAA,EACA,GAAA5I,EAAAqE,YAAA,GAEA,GADA+B,EAAAhJ,SAAA4C,EAAAsE,QAAAwD,IAAA9H,EAAAsE,QAAAwD,IAAA9H,EAAAyE,QAAAzE,EAAAyE,QACA2B,GAAA/I,QAAAgJ,OAAArG,EAAA2E,MAAA,GAAAyB,GACA,WAIAA,GAAApG,EAAA2E,MAAA3E,EAAAqE,iBAKA,IAAA,IAAArE,EAAAqE,YAAA,CAGA,GAAAjH,SAAAgJ,EAAA,MAIA,IAAAhJ,SAAA4C,EAAAsE,QAAAwD,KAAA,gBAAA1B,IAEA,GADAA,EAAApG,EAAAsE,QAAAwD,IAAA1B,IACAA,EAAA,WAEA,gBAAAA,KAEAA,EAAAA,EAAA3G,QAAAO,EAAA4I,aAAA,IAAAqD,QAKA,GAAAjM,EAAAmG,UAAA9I,QAAAuM,QAAA5J,EAAAmG,WAAAnG,EAAAmG,SAAA/F,OAAA,SAAA8L,GAAA,MAAA7O,SAAAgJ,OAAA6F,EAAA9F,KAAAzD,OAAA,EAEA,WADA3C,GAAAgH,MAAAlI,GAKAiG,EAAA4D,WAAA,aAAAvC,EAEA,IAAA+F,KACAA,GAAAnM,EAAA6C,aAAAQ,UAAA+C,EAEAnB,EAAA,WACAjF,EAAAoM,iBAAArH,GACAsH,MAAAjG,EACAkG,OAAAtM,EAAA6C,aAAA0J,YAAAxH,EAAAoH,OAIAnM,EAAAnB,eACAmB,EAAAgH,MAAAlI,GAEAkN,GAAA,UAAAA,EAAAQ,OACAxM,EAAAkI,sBAAA,MAOAlI,EAAAgH,MAAA,SAAAlI,GACAkB,EAAAkE,OACAlE,EAAAsL,SAAAtL,EAAAsL,QAAAmB,aAAAzM,EAAAsL,QAAAmB,cACAzG,IACAhG,EAAAkE,MAAA,EAEAa,EAAA4D,WAAA,YAAA7J,KAIAkB,EAAA0M,SAAA,WACA1M,EAAA2H,OAAA3H,EAAA2M,WAAA,GAAAhF,SAGA3H,EAAA4M,MAAA,SAAAZ,GACAhM,EAAA+G,OAAA3J,QACA4O,EAAAa,kBACA5H,EAAA,WACAjF,EAAA6H,SAAA,GAAAF,SACA,GAAA,IAIA3H,EAAA8M,OAAA,SAAAtQ,GACAwD,EAAAkE,MACAlE,EAAAgH,QACAxK,EAAAuQ,iBACAvQ,EAAAqQ,mBAEA7M,EAAAoE,YAIApE,EAAAgN,SAAA,SAAApB,EAAAC,GACA,GAAAmB,GAAA5G,EAAApG,EAAAmG,SAAA0F,EAOA,OALAzF,KAAA/I,QAAAmL,YAAAxI,EAAAiI,wBACA+E,IAAApB,EAAA/G,MAAA7E,EAAAiI,sBACA7B,EAAA6G,sBAAAD,GAGAA,EAGA,IAAAE,GAAA,KACAC,GAAA,CACAnN,GAAAoN,gBAAA,WAEA,GAAAC,GAAArN,EAAAsI,YAAA,GACApB,EAAAlH,EAAAsI,YAAArG,SAAAA,SAAA,GACAqL,EAAA,WAEA,MAAApG,GAAAqG,cAAAF,EAAAG,cAEAC,EAAA,SAAAC,GACA,GAAA,IAAAA,EACA,OAAA,CAEA,IAAAC,GAAAD,EAAAL,EAAAO,WAAA,EAGA,OAFA,IAAAD,IAAAA,EAAAD,GACA1N,EAAAsI,YAAAuF,IAAA,QAAAF,EAAA,OACA,EAGA3N,GAAAsI,YAAAuF,IAAA,QAAA,QACA5I,EAAA,WACA,OAAAiI,GAAAO,EAAAH,OACAJ,EAAAnI,EAAAf,OAAA3G,QAAAyQ,KAAA,WACAX,IACAA,GAAA,EACApI,EAAAgJ,aAAA,WACAZ,GAAA,EACAM,EAAAH,OACAJ,IACAA,EAAA,eAwCAlN,EAAAsI,YAAAY,GAAA,UAAA,SAAA1M,GAEA,GAAAqK,GAAArK,EAAAE,QAEA5H,EAAAE,MAAAF,EAAAG,KAAA+H,QAAA6J,KACArK,EAAAuQ,iBACAvQ,EAAAqQ,mBAQA9H,EAAAiJ,OAAA,WAEA,GAAAC,IAAA,CAEA,KAAAjO,EAAA2E,MAAAhC,OAAA,GAAA3C,EAAAsE,QAAAC,eACAqC,EAAAC,GACA7G,EAAA+H,cAAAxD,aAAA,CACA,IAAA,GAAAuB,GAAA,EAAAA,EAAA9F,EAAA+H,cAAAC,OAAArF,OAAAmD,IACA9F,EAAA+H,cAAAC,OAAAlC,KAAAhR,EAAAmB,IAAAuG,EAAA0R,UAEAlO,EAAAyE,OAAA9B,OAAA,IACAsL,GAAA,EAIAA,IACAhJ,EAAA,WACAjF,EAAAsI,YAAA6F,eAAA,SACA,IAAAC,GAAApO,EAAAyE,OAAAhF,QAAA3K,EAAAmB,IAAAuG,EAAA0R,SAAA,IAAAjC,MACAjM,GAAAsE,QAAAwD,MACAsG,EAAApO,EAAAsE,QAAAwD,IAAAsG,IAEAA,GAAApO,EAAA+G,OAAAqH,GAAA,QAQAtZ,EAAAiI,mBAAA8J,IAAA7G,EAAA2E,MAAAhC,OAAA,GACAsE,IAGAJ,IAAA/R,EAAAE,OAAA6R,IAAA/R,EAAAG,MACAuH,EAAAuQ,iBACAvQ,EAAAqQ,qBAKA7M,EAAAsI,YAAAY,GAAA,QAAA,SAAA1M,GACA,GAAAsO,EAWA,IARAA,EADAuD,OAAAC,eAAAD,OAAAC,cAAAC,QACAF,OAAAC,cAAAC,QAAA,SAEA/R,EAAAgS,eAAAhS,GAAA8R,cAAAC,QAAA,cAIAzD,EAAA9K,EAAAyE,OAAAqG,EAEAA,GAAAA,EAAAnI,OAAA,EAEA,GAAA3C,EAAA+H,cAAAxD,YAAA,CAEA,IAAA,GADAI,MACAmB,EAAA,EAAAA,EAAA9F,EAAA+H,cAAAC,OAAArF,OAAAmD,IAAA,CACA,GAAA2I,GAAA3Z,EAAAoI,YAAA8C,EAAA+H,cAAAC,OAAAlC,KAAA9F,EAAA+H,cAAAC,OAAAlC,EACA,IAAAgF,EAAA9N,QAAAyR,GAAA,GAAA,CACA9J,EAAAmG,EAAA4D,MAAAD,EACA,QAMA,GAHA,IAAA9J,EAAAhC,SACAgC,GAAAmG,IAEAnG,EAAAhC,OAAA,EAAA,CACA,GAAAgM,GAAA3O,EAAAyE,MACApH,SAAAmM,QAAA7E,EAAA,SAAAyB,GACA,GAAAgI,GAAApO,EAAAsE,QAAAwD,IAAA9H,EAAAsE,QAAAwD,IAAA1B,GAAAA,CACAgI,IACApO,EAAA+G,OAAAqH,GAAA,KAGApO,EAAAyE,OAAAkK,GAAAzI,EACA1J,EAAAuQ,iBACAvQ,EAAAqQ,uBAEA7M,GAAAyH,QACAzH,EAAAyH,MAAAqD,GACA9K,EAAAyE,OAAAyB,EACA1J,EAAAuQ,iBACAvQ,EAAAqQ,qBAKA7M,EAAAsI,YAAAY,GAAA,SAAA,WACAjE,EAAA,WACAe,OA8BA,IAAA4I,GAAAzJ,EAAA,WACAnF,EAAAoN,mBACA,GAEA/P,SAAAC,QAAAqD,GAAAzC,KAAA,SAAA0Q,GAEA7J,EAAAjB,IAAA,WAAA,WACA9D,EAAAsI,YAAAU,IAAA,mCACA3L,QAAAC,QAAAqD,GAAAqI,IAAA,SAAA4F,QAIAvQ,EAAAuB,UAAA,YACA,YAAA,iBAAA,iBAAA,YAAA,WAAA,SAAA,WACA,SAAAc,EAAAc,EAAAE,EAAAmN,EAAAlN,EAAAyD,EAAAH,GAEA,OACArD,SAAA,KACAE,YAAA,SAAAC,EAAAK,GACA,GAAA5D,GAAA4D,EAAA5D,OAAAgD,EAAAhD,KACA,OAAAA,IAAAnB,QAAAgO,UAAAjJ,EAAA+B,UAAA,4BAAA,qBAEA1E,SAAA,EACAQ,YAAA,EACA4B,SAAA,WAAA,YACA/B,OAAA,EAEAgF,WAAA,eACAgK,aAAA,UACA3M,QAAA,SAAAJ,EAAAK,GAGA,GAAA2M,GAAA,kBAAAC,KAAA5M,EAAA6M,QACA,IAAAF,EAAA,CACA,GAAAG,GAAA,IAAAH,EAAA,GAAA,KAAAA,EAAA,GAAA,GACA3M,GAAA6M,QAAAC,EACAnN,EAAAG,KAAA,WAAAgN,GAYA,MARA7R,SAAAgO,UAAAjJ,EAAA+B,UACApC,EAAA5B,OAAA,yBAAAgP,WAAA,YAEApN,EAAA5B,OAAA,uBAEAiC,EAAAgN,UACArN,EAAAvE,iBAAA,0BAAA,GAAA6R,GAAAjN,EAAAgN,SAEA,SAAAtP,EAAAxC,EAAAyC,EAAAuP,EAAAC,GA0JA,QAAAC,GAAAhT,GACA,GAAA8G,EAAAY,KAAA,CAEA,GAAAuL,IAAA,CAUA,IALAA,EAHApB,OAAAqB,OAGArB,OAAAqB,OAAAD,SAAAnS,EAAA,GAAAd,EAAAmT,QAEArS,EAAA,GAAAmS,SAAAjT,EAAAmT,SAGAF,IAAAnM,EAAA4E,qBAAA,CACA,GAAApJ,EACA,IAAAwE,EAAAxE,aAOAA,GAAA,MAPA,CAEA,GAAA8Q,IAAA,QAAA,SAAA,WAAA,UACAC,EAAAxS,QAAAC,QAAAd,EAAAmT,QAAA7K,WAAA,WACAhG,GAAA+Q,GAAAA,IAAAvM,EACAxE,IAAAA,GAAA8Q,EAAA5S,QAAAR,EAAAmT,OAAAG,QAAAjM,gBAIAP,EAAA0D,MAAAlI,GACAgB,EAAAiQ,UAEAzM,EAAA4E,sBAAA,GAiEA,QAAA8H,KAEA,GAAAC,GAAApB,EAAAvR,EAGAqB,GAAAtB,QAAAC,QAAA,6CACAqB,EAAA,GAAAuR,MAAApP,MAAAmP,EAAAnP,MAAA,KACAnC,EAAA,GAAAuR,MAAAlP,OAAAiP,EAAAjP,OAAA,KACA1D,EAAA6S,MAAAxR,GAIAyR,EAAA9S,EAAA,GAAA4S,MAAApP,MAGAJ,EAAA2P,KAAA,QAAAlQ,OAAA7C,GAEAA,EAAA,GAAA4S,MAAAtM,SAAA,WACAtG,EAAA,GAAA4S,MAAA7O,KAAA4O,EAAA5O,KAAA,KACA/D,EAAA,GAAA4S,MAAAjP,IAAAgP,EAAAhP,IAAA,KACA3D,EAAA,GAAA4S,MAAApP,MAAAmP,EAAAnP,MAAA,KAGA,QAAAwP,KACA,OAAA3R,IAMAA,EAAA4R,YAAAjT,GACAqB,EAAA,KAEArB,EAAA,GAAA4S,MAAAtM,SAAA,GACAtG,EAAA,GAAA4S,MAAA7O,KAAA,GACA/D,EAAA,GAAA4S,MAAAjP,IAAA,GACA3D,EAAA,GAAA4S,MAAApP,MAAAsP,EAGA9M,EAAAoJ,YA3RA,GAAApJ,GAAAgM,EAAA,GACAhE,EAAAgE,EAAA,EAEAhM,GAAAkN,YAAAhP,EAAAxC,aACAsE,EAAAmN,UAAA1Q,EAAA2Q,OAAA,aACApN,EAAAqN,cAAArN,EAAAmN,UAAA,SACAnN,EAAAsN,WAAA,YAAAtN,EAAAkN,YAEAlN,EAAAzE,cAAA,WACA,MAAAxB,SAAAgO,UAAAtL,EAAAlB,eACAuG,EAAArF,EAAAlB,iBAEA2C,EAAA3C,iBAIAiB,EAAAkE,OAAA,eAAA,WACA,GAAAlF,GAAAgB,EAAA+E,MAAA9E,EAAAjB,aACAwE,GAAAxE,aAAA1B,SAAA0B,EAAAA,EAAA0C,EAAA1C,eAGAwE,EAAA8I,iBAAAhH,EAAArF,EAAA8Q,UACAvN,EAAAwN,qBAAA1L,EAAArF,EAAAgR,cACAzN,EAAA0N,iBAAA5L,EAAArF,EAAAkR,UAGA3N,EAAA4N,MAAA7T,QAAAgO,UAAAtL,EAAAmR,OAAAC,SAAApR,EAAAmR,MAAA,IAAA9T,OAGAkG,EAAAgI,QAAAA,EAEAhI,EAAA8N,cAAA,SAAAhI,GACA,MAAA9F,GAAAkE,WAAA4B,GAAAA,EAAA1C,MAGA3G,EAAAsR,UACAtR,EAAA6E,SAAA,WAAA,SAAAe,GACArC,EAAAqJ,WAAAzK,KAAA,WAAAyD,GACArI,EAAA6R,WAAA,cAIA9R,QAAAgO,UAAAtL,EAAAoE,YAEA9G,QAAAgO,UAAAtL,EAAAuR,WAAAjU,QAAAgO,UAAAtL,EAAAwR,aAAA,SAAAxR,EAAAwR,cAKAjG,EAAAkG,YAAAC,WAAA,SAAAC,EAAAC,GAGA,MAAAC,OAAAhI,QAAA8H,GACAA,EAAA/O,OAAA,EACAiP,MAAAhI,QAAA+H,GACAA,EAAAhP,OAAA,EAKAvF,SAAAsU,GASA3R,EAAA6E,SAAA,WAAA,WACA0G,EAAAuG,eAMA/R,EAAAkE,OAAA,gBAAA,WACA,GAAAvF,GAAAqB,EAAA+E,MAAA9E,EAAAtB,cACA6E,GAAA7E,cAAArB,SAAAqB,EAAAA,EAAA+C,EAAA/C,gBAGAqB,EAAAkE,OAAA,WAAA,WACA,GAAAtF,GAAAoB,EAAA+E,MAAA9E,EAAArB,SACA4E,GAAA5E,SAAAtB,SAAAsB,EAAAA,EAAA8C,EAAA9C,WAGAqB,EAAA6E,SAAA,WAAA,WAEAtB,EAAAsE,SAAAxK,SAAA2C,EAAA6H,SAAA7H,EAAA6H,UAAA,IAGA7H,EAAA6E,SAAA,mBAAA,WAEA,GAAAqB,GAAAnG,EAAA+E,MAAA9E,EAAAkG,iBACA3C,GAAA2C,iBAAA7I,SAAA6I,EAAAA,GAAA,IAGAlG,EAAA6E,SAAA,QAAA,WACAtB,EAAAmE,MAAA3H,EAAA+E,MAAA9E,EAAA0H,SAGA1H,EAAA6E,SAAA,UAAA,WACA,GAAAxH,SAAA2C,EAAAuE,QACA,CAEA,GAAAwN,GAAAhS,EAAA+E,MAAA9E,EAAAuE,QACAhB,GAAAgB,SAAAC,aAAA,EAAAuD,IAAAgK,KAAA,EAAAA,EAAA1U,YAIAkG,GAAAgB,SAAAC,aAAA,EAAAuD,IAAA1K,UAIA2C,EAAA6E,SAAA,eAAA,WACAxH,SAAA2C,EAAAuE,UAIA,UAAAvE,EAAA6I,aACAtF,EAAAsF,cAAA,EAIAtF,EAAAsF,aAAAxL,SAAA2C,EAAA6I,aAAA7I,EAAA6I,aAAA,WAKA7I,EAAA6E,SAAA,gBAAA,WACA,GAAAxH,SAAA2C,EAAAuE,QAAA,CACA,GAAA0D,GAAA5K,SAAA2C,EAAAgI,cAAAhI,EAAAgI,cAAA2G,MAAA,MAAA,IAAA,QACApL,GAAAyE,eAAAxD,aAAA,EAAAyD,OAAAA,MAKA3K,QAAAgO,UAAAtL,EAAAgS,YACA9M,EAAA,WACA3B,EAAAoJ,aAKArP,QAAAgO,UAAAtL,EAAAiS,UACAlS,EAAAgE,IAAA/D,EAAAiS,QAAA,WACA/M,EAAA,WACA3B,EAAAoJ,eAoCAhM,EAAAwI,GAAA,QAAAsG,GAEA1P,EAAAgE,IAAA,WAAA,WACApD,EAAAsI,IAAA,QAAAwG,KAIAD,EAAAzP,EAAA,SAAAI,GAMA,GAAA+R,GAAA5U,QAAAC,QAAA,SAAA6C,OAAAD,GAEAgS,EAAAD,EAAAzU,iBAAA,mBAGA,IAFA0U,EAAA/C,WAAA,mBACA+C,EAAA/C,WAAA,wBACA,IAAA+C,EAAAvP,OACA,KAAAjB,GAAA,cAAA,6CAAAwQ,EAAAvP,OAEArF,GAAAE,iBAAA,oBAAA+S,YAAA2B,EAEA,IAAAC,GAAAF,EAAAzU,iBAAA,qBAGA,IAFA2U,EAAAhD,WAAA,qBACAgD,EAAAhD,WAAA,0BACA,IAAAgD,EAAAxP,OACA,KAAAjB,GAAA,cAAA,+CAAAyQ,EAAAxP,OAEArF,GAAAE,iBAAA,sBAAA+S,YAAA4B,EAEA,IAAAC,GAAAH,EAAAzU,iBAAA,uBACA4U,GAAAjD,WAAA,uBACAiD,EAAAjD,WAAA,4BACA,GAAAiD,EAAAzP,QACArF,EAAAE,iBAAA,wBAAA+S,YAAA6B,IAKA,IAAAnT,GAAAa,EAAA+E,MAAA9E,EAAAd,eACA7B,SAAA6B,EAAAA,EAAAuC,EAAAvC,gBACAa,EAAAkE,OAAA,eAAA,SAAAqO,GACAA,EACArC,IAEAM,MAMAxQ,EAAAgE,IAAA,WAAA,WACAwM,MAKA,IAAA3R,GAAA,KACAyR,EAAA,GA6CAkC,EAAA,KACAC,EAAA,cAGAzS,GAAAkE,OAAA,eAAA,WACAwO,QAAAC,IAAA,gBACA,SAAAnP,EAAAvE,kBAAA,OAAAuE,EAAAvE,kBACAe,EAAAqL,wBAKA,IAAAuH,GAAA,SAAAzC,EAAA0C,GAEA1C,EAAAA,GAAApB,EAAAvR,GACAqV,EAAAA,GAAA9D,EAAAyD,GAEAA,EAAA,GAAApC,MAAAtM,SAAA,WACA0O,EAAA,GAAApC,MAAAjP,IAAA,GAAA0R,EAAA3R,OAAA,KACA1D,EAAA0E,SAAAuQ,IAIAK,EAAA,SAAA3C,EAAA0C,GAEArV,EAAAuV,YAAAN,GAEAtC,EAAAA,GAAApB,EAAAvR,GACAqV,EAAAA,GAAA9D,EAAAyD,GAEAA,EAAA,GAAApC,MAAAtM,SAAA,GACA0O,EAAA,GAAApC,MAAAjP,IAAA,GAIAnB,GAAAqL,qBAAA,WAEA,GAAA7H,EAAAY,KAAA,CAEA,GADAoO,EAAAjV,QAAAC,QAAAA,GAAAE,iBAAA,uBACA,IAAA8U,EAAA3P,OACA,MAIA2P,GAAA,GAAApC,MAAA4C,QAAA,EAGA7N,EAAA,WAEA,GAAA,OAAA3B,EAAAvE,iBAEA2T,QAEA,CAEApV,EAAAuV,YAAAN,EAEA,IAAAtC,GAAApB,EAAAvR,GACAqV,EAAA9D,EAAAyD,GAGAlR,EAAAV,EAAA,GAAAS,gBAAAC,WAAAV,EAAA,GAAAqS,KAAA3R,SAGA6O,GAAAhP,IAAAgP,EAAAjP,OAAA2R,EAAA3R,OAAAI,EAAAV,EAAA,GAAAS,gBAAAmG,aAEAoL,EAAAzC,EAAA0C,GAGAC,EAAA3C,EAAA0C,GAMAL,EAAA,GAAApC,MAAA4C,QAAA,EACAN,QAAAC,IAAA,0BACAH,EAAA,GAAA3K,MAAA,WACA6K,QAAAC,IAAA,gCAEAD,QAAAC,IAAAH,EAAA,UAEA,CACA,GAAA,OAAAA,GAAA,IAAAA,EAAA3P,OACA,MAIA2P,GAAA,GAAApC,MAAAtM,SAAA,GACA0O,EAAA,GAAApC,MAAAjP,IAAA,GACA3D,EAAAuV,YAAAN,WAQAlU,EAAAuB,UAAA,iBAAA,iBAAA,SAAA4B,GAqCA,QAAAwR,GAAApV,EAAAqV,GACA,MAAArV,GAAA,GAAAsV,aAAAD,GACArV,EAAAsE,KAAA+Q,GAEArV,EAAA,GAAAsV,aAAA,QAAAD,GACArV,EAAAsE,KAAA,QAAA+Q,GAEArV,EAAA,GAAAsV,aAAA,KAAAD,GACArV,EAAAsE,KAAA,KAAA+Q,GADA,OA3CA,OACArR,SAAA,KACAC,QAAA,YACApC,SAAA,EACAQ,YAAA,EACA6B,YAAA,SAAAC,GAEAA,EAAAC,SAAA,kBAEA,IAAAC,GAAAF,EAAAE,SAEAzD,EAAAwU,EAAA/Q,EAAA,UAAAT,EAAAhD,MACA2U,EAAA9V,QAAAgO,UAAA2H,EAAA/Q,EAAA,YAEA,OAAAzD,IAAA2U,EAAA,2BAAA,oBAEAtT,KAAA,SAAAC,EAAAxC,EAAAyC,EAAAuD,GAMA,QAAA8P,GAAAC,GACA/P,EAAAgQ,WAAAjW,QAAAgO,UAAAgI,GAAA,KAAAA,GAAA,EAAA,SAAAA,EAAAxP,eAAA,EANAP,EAAA2E,qBAAAlI,EAAAwT,aACAxT,EAAA6E,SAAA,cAAA,SAAAjG,GACA2E,EAAA3E,YAAAvB,SAAAuB,EAAAA,EAAA6C,EAAA7C,cAOAoB,EAAA6E,SAAA,aAAAwO,GACAA,EAAArT,EAAAuT,YAEAhQ,EAAAa,UACAb,EAAA8J,uBAkBA/O,EAAAuB,UAAA,oBAAA,iBAAA,WAAA,SAAA8B,EAAAuD,GACA,OACArD,SAAA,KACAC,SAAA,YAAA,YAEAiD,YAAA,SAAA,WAAA,SAAAC,EAAAE,GAEA,GAEAqG,GAFAtL,EAAAtC,KACA4F,EAAAyB,EAAAzB,OAGAjG,SAAAmL,YAAAlF,EAAA6C,YACA7C,EAAA6C,aAGApB,EAAAyO,WAAA,WAAAlI,EAAAvG,EAAAuG,UAEAtL,EAAAyT,iBAAA,GAEAzT,EAAA0T,YAAA,WACApI,EAAAqI,cAAAC,KAAAC,OACA7T,EAAA8T,oBAGA9T,EAAA8T,iBAAA,WAIAxQ,EAAAuH,eACAvH,EAAA8J,mBAIApN,EAAA+T,eAAA,SAAAC,GACAhU,EAAAyT,iBAAAO,CACA,IAAA5N,GAAA9C,EAAA6C,SAAAnG,EAAAyT,iBACA,IAAArN,EAAA,CACA,GAAA+F,KACAA,GAAA7I,EAAAT,aAAAQ,UAAA+C,EACAnB,EAAA,WACA3B,EAAAwN,qBAAA/L,GACAsH,MAAAjG,EACAkG,OAAAhJ,EAAAT,aAAA0J,YAAAxH,EAAAoH,SAOAnM,EAAAiU,aAAA,SAAAD,GAEA,GAAAE,GAAA5Q,EAAA6C,SAAA6N,EAGA,KAAAE,EAAAjH,sBAAA,CAEA,GAAAd,KACAA,GAAA7I,EAAAT,aAAAQ,UAAA6Q,EAEA5Q,EAAA6C,SAAAgO,OAAAH,EAAA,GACAhU,EAAAyT,iBAAA,GACAnQ,EAAA8J,kBAGAnI,EAAA,WACA3B,EAAA0N,iBAAAjM,GACAsH,MAAA6H,EACA5H,OAAAhJ,EAAAT,aAAA0J,YAAAxH,EAAAoH,OAIAnM,EAAA0T,gBAIA1T,EAAAoU,eAAA,WAEA,MAAA9Q,GAAA6C,UAAA7C,EAAA6C,SAAAxD,OAAA,OACAW,EAAA3E,eAKAmQ,aAAA,kBAEAjP,KAAA,SAAAC,EAAAxC,EAAAyC,EAAAuP,GAuIA,QAAA+E,GAAAC,GACA,MAAAjX,SAAAkX,SAAAD,EAAAE,gBAAAF,EAAAE,eAEAF,EAAA3O,MAAAhD,OAGA,QAAA8R,GAAA5N,GAeA,QAAA6N,KACA,OAAA7N,GACA,IAAA/R,GAAAK,KAEA,OAAAwf,EAAAlB,iBAAAmB,EAEAC,CAEA,KAAA/f,GAAAO,MAEA,OAAAsf,EAAAlB,kBAAAqB,IAAAD,EAKAE,GAJAzR,EAAAc,YACA,EAKA,KAAAtP,GAAAgB,UAEA,OAAA6e,EAAAlB,kBACAkB,EAAAV,aAAAa,GACAF,GAGAC,CAEA,KAAA/f,GAAAiB,OAEA,OAAA4e,EAAAlB,kBACAkB,EAAAV,aAAAU,EAAAlB,kBACAqB,IAEA,GA9CA,GAAAE,GAAAX,EAAA/Q,EAAAgF,YAAA,IACA3F,EAAAW,EAAA6C,SAAAxD,OAEAsS,EAAA,EACAJ,EAAAlS,EAAA,EACAmS,EAAAH,EAAAlB,iBACAsB,EAAAJ,EAAAlB,iBAAA,EACAmB,EAAAD,EAAAlB,iBAAA,EACAyB,EAAAJ,CAEA,OAAAE,GAAA,GAAA1R,EAAAmB,OAAA9B,QAAAkE,GAAA/R,EAAAO,OAAA,GAEAiO,EAAA0D,QAsCAkO,EAAAR,IAEApR,EAAA6C,SAAAxD,QAAAuS,KAAA,EACAP,EAAAlB,iBAAA0B,KAAAC,IAAAP,EAAAM,KAAAE,IAAAJ,EAAAC,IADAP,EAAAlB,iBAAA,IAGA,GAgIA,QAAA6B,GAAAC,GACA,GAAAnY,SAAAmY,GAAAnY,SAAAkG,EAAAmB,OACA,OAAA,CAEA,IAAA+Q,GAAAD,EAAAnV,OAAA,SAAAqV,GACA,MAAArY,UAAAkG,EAAAmB,OAAAiR,eAAAtY,SAAAqY,GACA,EAEAA,EAAAC,gBAAApS,EAAAmB,OAAAiR,gBACA/S,OAAA,CAEA,OAAA6S,GAEA,QAAAG,GAAAC,EAAAC,GACA,GAAAC,GAAA,EACA,IAAAzY,QAAAuM,QAAAgM,GAEA,IAAA,GADAG,GAAA1Y,QAAA2Y,KAAAJ,GACA9P,EAAA,EAAAA,EAAAiQ,EAAApT,OAAAmD,IAEA,GAAA1I,SAAAkG,EAAAgB,QAAAwD,IAEAiO,EAAAjQ,GAAA,IAAAxC,EAAAsF,eAAAiN,IACAC,EAAAhQ,OAGA,CACA,GAAAmQ,GAAAF,EAAAjQ,EACAzI,SAAA6Y,SAAAD,KACAA,EAAAE,OAAA,GAEA9Y,QAAAgJ,OAAA4P,EAAAJ,KACAC,EAAAhQ,GAKA,MAAAgQ,GAvWA,GAAAxS,GAAAgM,EAAA,GACAhE,EAAAxL,EAAAwL,QAAAgE,EAAA,GACAqF,EAAA7U,EAAA6U,eAIArR,GAAAa,UAAA,EACAb,EAAAoE,gBAAA,EAGApE,EAAAqJ,WAAArJ,EAAAgF,YAGAgD,EAAA8K,SAAA,SAAAzQ,GACA,OAAAA,GAAA,IAAAA,EAAAhD,QAIA2I,EAAA+K,SAAAC,QAAA,WAIA,IAAA,GAFA7P,GADA0F,KAEAoK,KACA/P,EAAAlD,EAAA6C,SAAAxD,OAAA,EAAA6D,GAAA,EAAAA,IACA2F,KACAA,EAAA7I,EAAAT,aAAAQ,UAAAC,EAAA6C,SAAAK,GACAC,EAAAnD,EAAAT,aAAA0J,YAAAzM,EAAAqM,GACAoK,EAAAD,QAAA7P,EAEA,OAAA8P,KAIAjL,EAAAkL,YAAAF,QAAA,SAAAG,GACA,GAEAhQ,GAFAqE,EAAAxH,EAAAT,cAAAS,EAAAT,aAAAqH,OAAApK,GAAAwD,SAAAmB,OAAA,MACA0H,IAEA,KAAArB,EAAA,MAAA2L,EACA,IAAAF,MACAG,EAAA,SAAA9Q,EAAAD,GACA,GAAAC,GAAAA,EAAAjD,OAAA,CACA,IAAA,GAAAgU,GAAA/Q,EAAAjD,OAAA,EAAAgU,GAAA,EAAAA,IAAA,CAGA,GAFAxK,EAAA7I,EAAAT,aAAAQ,UAAAuC,EAAA+Q,GACAlQ,EAAAnD,EAAAT,aAAA0J,YAAAzM,EAAAqM,GACA7I,EAAAT,aAAA+T,WAAA,CACA,GAAAC,GAAA,UAAA7H,KAAA1L,EAAAT,aAAA+T,YACA9Y,EAAA,aAAAkR,KAAA1L,EAAAT,aAAA+T,WACA,IAAAC,GAAAA,EAAAlU,OAAA,GAAAkU,EAAA,IAAAvT,EAAAT,aAAAQ,UACAvF,GAAAA,EAAA6E,OAAA,GAAA8D,EAAA3I,EAAA,KAAA6H,EAAA7H,EAAA,IAEA,MADAyY,GAAAD,QAAA1Q,EAAA+Q,KACA,EAIA,GAAAtZ,QAAAgJ,OAAAI,EAAAd,GAEA,MADA4Q,GAAAD,QAAA1Q,EAAA+Q,KACA,EAGA,OAAA,GAEA,KAAAF,EAAA,MAAAF,EACA,KAAA,GAAA9Z,GAAAga,EAAA9T,OAAA,EAAAlG,GAAA,EAAAA,IAEAia,EAAApT,EAAA6C,SAAAsQ,EAAAha,KAEAia,EAAA5L,EAAA2L,EAAAha,KAEA8Z,EAAAD,QAAAG,EAAAha,GAIA,OAAA8Z,KAIAzW,EAAAsL,iBAAA,WAAA,MAAAE,GAAAC,aAAA,SAAAtH,EAAA6S,GACAA,GAAA7S,IAEA5G,QAAAgO,UAAAC,EAAAC,eACAD,EAAAC,YAAA,MAEAoJ,EAAAb,sBAIAxI,EAAAyL,QAAA,WAEA,IAAA1Z,QAAAuM,QAAA0B,EAAA0L,YAAA,CAEA,IAAA3Z,QAAAmL,YAAA8C,EAAA0L,aAAA,OAAA1L,EAAA0L,WAGA,KAAAtV,GAAA,WAAA,iDAAA4J,EAAA0L,WAFA1T,GAAA6C,YAKA7C,EAAA6C,SAAAmF,EAAA0L,WACArC,EAAAb,mBACAhU,EAAA0T,cAGA1T,EAAAgE,IAAA,aAAA,SAAAmT,EAAA7Q,GACA9C,EAAA6C,SAAAxD,QAAAW,EAAA4N,QAGA5N,EAAA6C,SAAAQ,KAAAP,GACAuO,EAAAjB,iBAGA5T,EAAAgE,IAAA,eAAA,WACA6Q,EAAAlB,iBAAA,KAGA3T,EAAAkE,OAAA,mBAAA,SAAAC,EAAA6S,GAEAA,IAAA7S,GAAAX,EAAA8J,oBAGA9J,EAAAgF,YAAAY,GAAA,UAAA,SAAA1M,GACA,GAAAqK,GAAArK,EAAAE,KACAoD,GAAAkO,OAAA,WACA,GAAAlH,IAAA,CAEAhS,GAAAmI,qBAAA4J,KACAC,EAAA2N,EAAA5N,IAEAC,GAAAD,GAAA/R,EAAAC,MAGAyH,EAAAuQ,iBACAvQ,EAAAqQ,uBAqEAvJ,EAAAgF,YAAAY,GAAA,QAAA,SAAA1M,GAQA,GANA1H,EAAAiI,mBAAAP,EAAAE,QACAoD,EAAA0T,WAAA,WACAlQ,EAAAe,YAAAf,EAAAsF,gBAAA,EAAA,GAAA,IAIAtF,EAAAgB,QAAAC,aAAAjB,EAAAmB,OAAA9B,OAAA,EAAA,CAGA,GAAAnG,EAAAE,QAAA5H,EAAAC,KAAAD,EAAAyH,UAAAC,IAAA1H,EAAAgI,cAAAN,IAAAA,EAAAE,QAAA5H,EAAAG,KAAAH,EAAAiI,mBAAAP,EAAAE,OACA,MAKA,IAFA4G,EAAAe,YAAAf,EAAAsF,gBAAA,EAAA,GAAA,EAEAtF,EAAAsF,gBAAA,EAAA,MAEA,IAEAwF,GACAhI,EAGA8Q,EACAC,EAPAxS,EAAAtH,QAAA2Y,KAAA1S,EAAAqB,OACAyS,EAAA/Z,QAAA2Y,KAAA1S,EAAAqB,OAGA0S,GAAA,EACAvB,EAAA,EAKA,IAAA1Y,SAAAkG,EAAAgB,QAAAwD,IAAA,CAaA,GAZAoP,EAAA5T,EAAA4B,QAAA,UAAAP,GAAAwR,OAAA,IACAe,EAAAvU,OAAA,IACAwU,EAAAD,EAAA,IAGAvS,EAAAhC,OAAA,GAAAwU,IACAE,GAAA,EACA1S,EAAAA,EAAA2S,MAAA,EAAA3S,EAAAhC,QACAyU,EAAAA,EAAAE,MAAA,EAAAF,EAAAzU,SAEAyL,EAAA9K,EAAAgB,QAAAwD,IAAAxE,EAAAmB,QAGA2S,EAAAG,KAAA,SAAA9B,GACA,MAAApY,SAAAgJ,OAAAoP,EAAArH,MAEA9K,EAAA6C,SAAAoR,KAAA,SAAA9B,GACA,MAAApY,SAAAgJ,OAAAoP,EAAArH,KAOA,WAJAtO,GAAA0T,WAAA,WACAlQ,EAAAe,YAAA,EACAf,EAAAqB,MAAAA,GAIAyJ,KAAAA,EAAA+H,OAAA,OAEA,CAgBA,GAdAe,EAAA5T,EAAA4B,QAAA,UAAAP,EAAA,SAAAyB,GACA,MAAAA,GAAA2I,MAAAzL,EAAAsF,gBAEAsO,EAAAvU,OAAA,IACAwU,EAAAD,EAAA,IAEA9Q,EAAAzB,EAAA,GAEAvH,SAAAgJ,GAAAzB,EAAAhC,OAAA,GAAAwU,IACAE,GAAA,EACA1S,EAAAA,EAAA2S,MAAA,EAAA3S,EAAAhC,QACAyU,EAAAA,EAAAE,MAAA,EAAAF,EAAAzU,SAEAyL,EAAA9K,EAAAmB,OAAA,IAAAnB,EAAAsF,aACA+M,EAAArS,EAAA6C,SAAA7C,EAAAmB,QAAA,GACA,MAIA,IAAA6Q,EAAA8B,EAAAvN,OAAAvG,EAAA6C,WAUA,YAPAkR,IACA1S,EAAAyS,EACAtX,EAAA0T,WAAA,WACAlQ,EAAAe,YAAA,EACAf,EAAAqB,MAAAA,KAKA,IAAA2Q,EAAA8B,GAKA,YAHAC,IACA/T,EAAAqB,MAAAyS,EAAAE,MAAA,EAAAF,EAAAzU,UAKA0U,IAAAvB,EAAAH,EAAArS,EAAA6C,SAAAiI,IAEA0H,EAAA,GACAnR,EAAAA,EAAA2S,MAAAxB,EAAA,EAAAnR,EAAAhC,OAAA,IAEAgC,KACAyJ,GAAAzJ,EAAAgC,KAAAyH,GACAzJ,EAAAA,EAAAkF,OAAAuN,IAEAtX,EAAA0T,WAAA,WAIA,GAHAlQ,EAAAe,YAAA,EACAf,EAAAqB,MAAAA,EAEArB,EAAAkE,UAAA,CAEA,GAAAgQ,GAAApJ,EAAAzJ,EAAA2S,MAAA,GAAA3S,CACArB,GAAAyG,WAAAyN,GACApJ,IAEA9K,EAAAqB,MAAA2R,QAAAlI,GACA9K,EAAAZ,OAAA4T,SAAA5P,KAAA,GAAA/B,OAAAyJ,GAAA9J,SAAA,WA6CAhB,EAAAgF,YAAAY,GAAA,OAAA,WACAjE,EAAA,WACA3B,EAAAgF,YAAA,GAAA3C,MAAA,GACAgP,EAAAlB,iBAAA,YAQApV,EAAAuB,UAAA,oBACA,iBAAA,SAAA4B,GACA,OACAI,SAAA,KACAC,QAAA,YACApC,SAAA,EACAQ,YAAA,EACA6B,YAAA,SAAAC,GAEA,GAAAvD,GAAAuD,EAAAE,SAAAC,KAAA,UAAAV,EAAAhD,KACA,OAAAA,GAAA,2BAIAH,EAAAuB,UAAA,kBAAA,WAAA,WAAA,SAAAqF,EAAAtD,GACA,OACAC,SAAA,KACAC,SAAA,YAAA,YACAhC,KAAA,SAAAC,EAAAxC,EAAAyC,EAAAuP,GAEA,GAAAhM,GAAAgM,EAAA,GACAhE,EAAAgE,EAAA,EAGAhE,GAAA+K,SAAAC,QAAA,SAAAG,GACA,GACAhQ,GADA0F,IAIA,OAFAA,GAAA7I,EAAAT,aAAAQ,UAAAoT,EACAhQ,EAAAnD,EAAAT,aAAA0J,YAAAzM,EAAAqM,KAKAb,EAAAkL,YAAAF,QAAA,SAAAG,GACA,GAEAhQ,GAFAqE,EAAAxH,EAAAT,cAAAS,EAAAT,aAAAqH,OAAApK,GAAAwD,SAAAmB,OAAA,MACA0H,IAEA,IAAArB,EAAA,CACA,GAAA2M,GAAA,SAAAC,GAGA,MAFAvL,GAAA7I,EAAAT,aAAAQ,UAAAqU,EACAjR,EAAAnD,EAAAT,aAAA0J,YAAAzM,EAAAqM,GACA1F,IAAAgQ,EAGA,IAAAnT,EAAA6C,UAAAsR,EAAAnU,EAAA6C,UACA,MAAA7C,GAAA6C,QAEA,KAAA,GAAAL,GAAAgF,EAAAnI,OAAA,EAAAmD,GAAA,EAAAA,IACA,GAAA2R,EAAA3M,EAAAhF,IAAA,MAAAgF,GAAAhF,GAGA,MAAA2Q,KAIA3W,EAAAkE,OAAA,mBAAA,SAAAC,GACAqH,EAAA0L,aAAA/S,GACAqH,EAAAqI,cAAA1P,KAIAqH,EAAAyL,QAAA,WACAzT,EAAA6C,SAAAmF,EAAA0L,YAGAlX,EAAAgE,IAAA,aAAA,SAAAmT,EAAA7Q,GACA9C,EAAA6C,SAAAC,IAGAtG,EAAAgE,IAAA,YAAA,SAAAmT,EAAAnY,GACAmG,EAAA,WACA3B,EAAAuE,SAAA9G,KAAA,YAAA,GACAjC,GAAAwE,EAAAuE,SAAA,GAAAF,SACA,GAAA,KAGA7H,EAAAgE,IAAA,eAAA,WACA+D,EAAA9G,KAAA,YAAA,IAIA,IAAA8G,GAAAxK,QAAAC,QAAA,gNACAqE,GAAAkG,GAAA/H,GACAwD,EAAAuE,SAAAA,EAGAvE,EAAAqJ,WAAA9E,EAEAvK,EAAA2E,SAAA9B,OAAA0H,GACAA,EAAA3J,KAAA,QAAA,WACAsU,QAAAC,IAAA,SACA3S,EAAA0T,WAAA,WACAlQ,EAAAqE,OAAA,MAGAE,EAAA3J,KAAA,OAAA,WACAsU,QAAAC,IAAA,QACA3S,EAAA0T,WAAA,WACAlQ,EAAAqE,OAAA,MAGAE,EAAA3J,KAAA,UAAA,SAAA1B,GAEA,MADAgW,SAAAC,IAAA,WACAjW,EAAAE,QAAA5H,EAAAgB,WACA0G,EAAAuQ,iBACAvQ,EAAAqQ,kBACAvJ,EAAAyD,OAAA3J,YACA0C,GAAAkO,eAIAxR,EAAAE,QAAA5H,EAAAC,KAAAD,EAAAyH,UAAAC,IAAA1H,EAAAgI,cAAAN,IAAAA,EAAAE,QAAA5H,EAAAG,MAIAuH,EAAAE,OAAA5H,EAAAQ,MAAAkH,EAAAE,OAAA5H,EAAAM,IAAAoH,EAAAE,OAAA5H,EAAAE,OAAAwH,EAAAE,OAAA5H,EAAAI,QACAsH,EAAAuQ,iBACAvQ,EAAAqQ,kBACAvJ,EAAAc,YAGAtE,EAAAiQ,cAGAlI,EAAA3J,KAAA,cAAA,SAAA1B,GAEAA,EAAAE,QAAA5H,EAAAC,KAAAD,EAAAyH,UAAAC,IAAA1H,EAAAgI,cAAAN,IAAAA,EAAAE,QAAA5H,EAAAG,KAAAuH,EAAAE,OAAA5H,EAAAE,OAAAwH,EAAAE,QAAA5H,EAAAgB,YAIAwN,EAAAc,SAAAyD,EAAA8P,OACA9P,EAAA8P,IAAA,IACA7X,EAAAiQ,kBAUA1R,EAAAuB,UAAA,gBAAA,WAAA,iBAAA,iBAAA,SAAAqF,EAAAzD,EAAAE,GACA,OACAG,SAAA,aAAA,YACAhC,KAAA,SAAAC,EAAAxC,EAAAyC,EAAAuP,GACA,GAAA,OAAAxP,EAAAC,EAAA6X,cACA,KAAAlW,GAAA,OAAA,0BAGA,IAAA4B,GAAAgM,EAAA,GACAuI,EAAAvI,EAAA,GAEAwI,EAAAza,QAAA0a,QACAC,KAAA,cAEAlY,EAAA+E,MAAA9E,EAAAkY,sBAEAD,EAAAF,EAAAE,KACAE,EAAA,WACAC,EAAA,WACAC,EAAA,kBACAC,EAAA,gBAEAvY,GAAAkE,OAAA,WACA,MAAAV,GAAA5E,UACA,SAAAuF,GACAA,EACA3G,EAAA4E,KAAA,aAAA,GAEA5E,EAAA6R,WAAA,eAIA7R,EAAA4L,GAAA,YAAA,SAAA+N,GACA3Z,EAAA0E,SAAAkW,IAEAjB,EAAAqB,cAAArB,EAAAzI,cAAA8J,cAAAC,QAAA,OAAAzY,EAAA0Y,OAAAC,cAGAnb,EAAA4L,GAAA,UAAA,WACA2J,EAAAqF,IAGA,IA0BAQ,GA1BAC,EAAA,SAAAC,EAAAC,GAEAnb,KAAAyW,OAAA0E,EAAA,EAAAnb,KAAAyW,OAAAyE,EAAA,GAAA,KAGA/F,EAAA,SAAAiG,GACAzb,QAAAmM,QAAAlG,EAAA0B,SAAAxH,iBAAA,IAAAsb,GAAA,SAAAxE,GACAjX,QAAAC,QAAAgX,GAAAzB,YAAAiG,MAIAC,EAAA,SAAA9B,GACAA,EAAAlK,gBAEA,IAAAkD,GAAA,aAAA+H,EAAAf,EAAA+B,SAAA/B,EAAAgC,SAAAhC,EAAAzI,cAAAyI,EAAAzI,cAAAwK,QAAA,GAAA/B,EAAAiC,SAAAjC,EAAAkC,SAAAlC,EAAAzI,cAAAyI,EAAAzI,cAAA0K,QAAA,EAEAjJ,GAAAvS,KAAA,aAAAsa,EAAA,eAAA,eAAA,GACAnF,EAAAwF,GACA/a,EAAA0E,SAAAoW,KAGAvF,EAAAuF,GACA9a,EAAA0E,SAAAqW,KAMAe,EAAA,SAAAnC,GACAA,EAAAlK,gBAEA,IAAAsM,GAAAlI,UAAA8F,EAAAqB,cAAArB,EAAAzI,cAAA8J,cAAA/J,QAAA,QAAA,GAGAtJ,GAAAyG,OAAAgN,GACAA,EAAAzT,EAAA,WACAqU,EAAAD,IACA,KAGAC,EAAA,SAAAD,GACA,GAAAE,GAAAzZ,EAAA+E,MAAA9E,EAAA6X,cACA4B,EAAAD,EAAAF,GACAnE,EAAA,IAIAA,GAFA5X,EAAAmc,SAAArB,GACAiB,EAAAvZ,EAAA0Y,OACA1Y,EAAA0Y,OAAA,EAEA1Y,EAAA0Y,OAGAa,EAAAvZ,EAAA0Y,OACA1Y,EAAA0Y,OAEA1Y,EAAA0Y,OAAA,EAIAG,EAAArZ,MAAAia,GAAAF,EAAAnE,IAEA2C,EAAAlE,cAAAC,KAAAC,OAEA/T,EAAAkO,OAAA,WACAlO,EAAA4Z,MAAA,uBACAC,MAAAJ,EACAnT,KAAAoT,EACAZ,KAAAS,EACAR,GAAA3D,MAIArC,EAAAsF,GACAtF,EAAAuF,GACAvF,EAAAwF,GAEA/a,EAAA0L,IAAA,OAAAoQ,GAGA9b,GAAA4L,GAAA,YAAA,WACA5L,EAAAmc,SAAAvB,KAIA5a,EAAA0E,SAAAmW,GAEA7a,EAAA4L,GAAA,WAAA6P,GACAzb,EAAA4L,GAAA,OAAAkQ,MAGA9b,EAAA4L,GAAA,YAAA,SAAA+N,GACAA,EAAAtH,QAAArS,IAIAuV,EAAAsF,GACAtF,EAAAuF,GACAvF,EAAAwF,GAEA/a,EAAA0L,IAAA,WAAA+P,GACAzb,EAAA0L,IAAA,OAAAoQ,WAaA/a,EAAAoC,QAAA,iBAAA,WAAA,SAAAwE,GACA,MAAA,UAAA2U,EAAAC,GACA,GAAAC,EAEA,OAAA,YACA,GAAAC,GAAArc,KACAsc,EAAApI,MAAArU,UAAA+Z,MAAAvR,KAAAxG,UACAua,IACA7U,EAAAyG,OAAAoO,GAGAA,EAAA7U,EAAA,WACA2U,EAAAta,MAAAya,EAAAC,IACAH,QAeAxb,EAAAa,QAAA,mBAAA,iBAAA,SAAA,SAAAwC,EAAA0D,GACA,GAAA2U,GAAArc,IASAqc,GAAAjX,MAAA,SAAAmX,GAGA,GAAAlL,EAeA,IATAA,EAAAkL,EAAAlL,MAAA,gKASAA,EACA,KAAArN,GAAA,OAAA,yFACAuY,EAGA,IAAA/P,GAAA6E,EAAA,GACArE,EAAA,EAKA,IAAAqE,EAAA,GAAA,CAEA7E,EAAA6E,EAAA,GAAAtP,QAAA,eAAA,GAEA,IAAAya,GAAAnL,EAAA,GAAAA,MAAA,+CACAmL,IAAAA,EAAA,GAAAjO,SACAvB,EAAAwP,EAAA,GACAhQ,EAAAA,EAAAzK,QAAAiL,EAAA,KAIA,OACArH,SAAA0L,EAAA,IAAAA,EAAA,GACAtE,QAAAsE,EAAA,GACA7E,OAAA9E,EAAA8E,GACAQ,QAAAA,EACAkM,WAAA7H,EAAA,GACAxC,YAAAnH,EAAA2J,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACA/L,iBAAA,SAAAmX,GACA,GAAAF,GAAAvc,KAAA2F,SAAA,QAAA8W,EAAA,eAAA,gBAIA,OAHAzc,MAAAkZ,aACAqD,GAAA,aAAAvc,KAAAkZ,YAEAqD,KAMAF,EAAAnX,2BAAA,WACA,MAAA,kCDgBAvF,QAAQiB,OAAO,aAAa8b,KAAK,iBAAkB,SAASC,GEttE5DA,EAAAC,IAAA,6BAAA,wrBACAD,EAAAC,IAAA,oCAAA;AACAD,EAAAC,IAAA,2BAAA,2/BACAD,EAAAC,IAAA,+BAAA,qHACAD,EAAAC,IAAA,qCAAA,glBACAD,EAAAC,IAAA,4BAAA,unBACAD,EAAAC,IAAA,2BAAA,g1BACAD,EAAAC,IAAA,kCAAA,siBACAD,EAAAC,IAAA,yBAAA,6hBACAD,EAAAC,IAAA,mCAAA,qnCACAD,EAAAC,IAAA,0BAAA,69BACAD,EAAAC,IAAA,6BAAA,2jBACAD,EAAAC,IAAA,2BAAA,+HACAD,EAAAC,IAAA,4BAAA","file":"select.min.js","sourcesContent":["/*!\n * ui-select\n * http://github.com/angular-ui/ui-select\n * Version: 0.17.1 - 2016-05-17T16:37:16.426Z\n * License: MIT\n */\n\n\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n        case KEY.ALT:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey || e.altKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-choices');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/choices.tpl.html';\n    },\n\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      // var repeat = RepeatParser.parse(attrs.repeat);\n      var groupByExp = tAttrs.groupBy;\n      var groupFilterExp = tAttrs.groupFilter;\n\n      if (groupByExp) {\n        var groups = tElement.querySelectorAll('.ui-select-choices-group');\n        if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n        groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n      }\n\n      var parserResult = RepeatParser.parse(tAttrs.repeat);\n\n      var choices = tElement.querySelectorAll('.ui-select-choices-row');\n      if (choices.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n      }\n\n      choices.attr('ng-repeat', parserResult.repeatExpression(groupByExp))\n             .attr('ng-if', '$select.open'); //Prevent unnecessary watches when dropdown is closed\n    \n\n      var rowsInner = tElement.querySelectorAll('.ui-select-choices-row-inner');\n      if (rowsInner.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n      }\n      rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n\n      // If IE8 then need to target rowsInner to apply the ng-click attr as choices will not capture the event. \n      var clickTarget = $window.document.addEventListener ? choices : rowsInner;\n      clickTarget.attr('ng-click', '$select.select(' + parserResult.itemName + ',$select.skipFocusser,$event)');\n      \n      return function link(scope, element, attrs, $select) {\n\n       \n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n\n        $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;        \n\n        scope.$on('$destroy', function() {\n          choices.remove();\n        });\n\n        scope.$watch('$select.search', function(newValue) {\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            $select.refresh(attrs.refresh);\n          } else {\n            $select.items = [];\n          }\n        });\n\n        attrs.$observe('refreshDelay', function() {\n          // $eval() is needed otherwise we get a string instead of a number\n          var refreshDelay = scope.$eval(attrs.refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n      };\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$injector', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $injector, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n\n  ctrl.removeSelected = false; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.resetSearchInput = true;\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n  ctrl.$element = $element;\n\n  // Use $injector to check for $animate and store a reference to it\n  ctrl.$animate = (function () {\n    try {\n      return $injector.get('$animate');\n    } catch (err) {\n      // $animate does not exist\n      return null;\n    }\n  })();\n\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  ctrl.isEmpty = function() {\n    return angular.isUndefined(ctrl.selected) || ctrl.selected === null || ctrl.selected === '' || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput || (ctrl.resetSearchInput === undefined && uiSelectConfig.resetSearchInput)) {\n      ctrl.search = EMPTY_SEARCH;\n      //reset activeIndex\n      if (ctrl.selected && ctrl.items.length && !ctrl.multiple) {\n        ctrl.activeIndex = _findIndex(ctrl.items, function(item){\n          return angular.equals(this, item);\n        }, ctrl.selected);\n      }\n    }\n  }\n\n    function _groupsFilter(groups, groupNames) {\n      var i, j, result = [];\n      for(i = 0; i < groupNames.length ;i++){\n        for(j = 0; j < groups.length ;j++){\n          if(groups[j].name == [groupNames[i]]){\n            result.push(groups[j]);\n          }\n        }\n      }\n      return result;\n    }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(initSearchValue, avoidReset) {\n    if (!ctrl.disabled  && !ctrl.open) {\n      if(!avoidReset) _resetSearchInput();\n\n      $scope.$broadcast('uis:activate');\n\n      ctrl.open = true;\n\n      ctrl.activeIndex = ctrl.activeIndex >= ctrl.items.length ? 0 : ctrl.activeIndex;\n\n      // ensure that the index is set to zero for tagging variants\n      // that where first option is auto-selected\n      if ( ctrl.activeIndex === -1 && ctrl.taggingLabel !== false ) {\n        ctrl.activeIndex = 0;\n      }\n\n      var container = $element.querySelectorAll('.ui-select-choices-content');\n      var searchInput = $element.querySelectorAll('.ui-select-search');\n      if (ctrl.$animate && ctrl.$animate.enabled(container[0])) {\n        var animateHandler = function(elem, phase) {\n          if (phase === 'start' && ctrl.items.length === 0) {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('removeClass', searchInput[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          } else if (phase === 'close') {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('enter', container[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          }\n        };\n\n        if (ctrl.items.length > 0) {\n          ctrl.$animate.on('enter', container[0], animateHandler);\n        } else {\n          ctrl.$animate.on('removeClass', searchInput[0], animateHandler);\n        }\n      } else {\n        $timeout(function () {\n          ctrl.focusSearchInput(initSearchValue);\n          if(!ctrl.tagging.isActivated && ctrl.items.length > 1) {\n            _ensureHighlightVisible();\n          }\n        });\n      }\n    }\n  };\n\n  ctrl.focusSearchInput = function (initSearchValue) {\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n  };\n\n  ctrl.findGroupByName = function(name) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.groups = [];\n      angular.forEach(items, function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if(group) {\n          group.items.push(item);\n        }\n        else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n      if(groupFilterExp){\n        var groupFilterFn = $scope.$eval(groupFilterExp);\n        if( angular.isFunction(groupFilterFn)){\n          ctrl.groups = groupFilterFn(ctrl.groups);\n        } else if(angular.isArray(groupFilterFn)){\n          ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n        }\n      }\n      ctrl.items = [];\n      ctrl.groups.forEach(function(group) {\n        ctrl.items = ctrl.items.concat(group.items);\n      });\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items;\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function(){\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    ctrl.refreshItems = function (data){\n      data = data || ctrl.parserResult.source($scope);\n      var selectedItems = ctrl.selected;\n      //TODO should implement for single mode removeSelected\n      if (ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length) || !ctrl.removeSelected) {\n        ctrl.setItemsFn(data);\n      }else{\n        if ( data !== undefined ) {\n          var filteredItems = data.filter(function(i) {\n            return selectedItems.every(function(selectedItem) {\n              return !angular.equals(i, selectedItem);\n            });\n          });\n          ctrl.setItemsFn(filteredItems);\n        }\n      }\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n    $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else {\n        if (!angular.isArray(items)) {\n          throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n        } else {\n          //Remove already selected items (ex: while searching)\n          //TODO Should add a test\n          ctrl.refreshItems(items);\n\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ctrl.ngModel.$modelValue)) {\n            ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n        }\n      }\n    });\n\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        $scope.$eval(refreshAttr);\n      }, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || itemIndex < 0 ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isDisabled = false;\n    var item;\n\n    if (itemIndex >= 0 && !angular.isUndefined(ctrl.disableChoiceExpression)) {\n      item = ctrl.items[itemIndex];\n      isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression)); // force the boolean value\n      item._uiSelectChoiceDisabled = isDisabled; // store this for later reference\n    }\n\n    return isDisabled;\n  };\n\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  ctrl.select = function(item, skipFocusser, $event) {\n    if (item === undefined || !item._uiSelectChoiceDisabled) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !item._uiSelectChoiceDisabled) {\n        if(ctrl.tagging.isActivated) {\n          // if taggingLabel is disabled, we pull from ctrl.search val\n          if ( ctrl.taggingLabel === false ) {\n            if ( ctrl.activeIndex < 0 ) {\n              item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              if (!item || angular.equals( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined ) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if ( ctrl.selected && angular.isArray(ctrl.selected) && ctrl.selected.filter( function (selection) { return angular.equals(selection, item); }).length > 0 ) {\n            ctrl.close(skipFocusser);\n            return;\n          }\n        }\n\n        $scope.$broadcast('uis:select', item);\n\n        var locals = {};\n        locals[ctrl.parserResult.itemName] = item;\n\n        $timeout(function(){\n          ctrl.onSelectCallback($scope, {\n            $item: item,\n            $model: ctrl.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        if (ctrl.closeOnSelect) {\n          ctrl.close(skipFocusser);\n        }\n        if ($event && $event.type === 'click') {\n          ctrl.clickTriggeredSelect = true;\n        }\n      }\n    }\n  };\n\n  // Closes the dropdown\n  ctrl.close = function(skipFocusser) {\n    if (!ctrl.open) return;\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    _resetSearchInput();\n    ctrl.open = false;\n\n    $scope.$broadcast('uis:close', skipFocusser);\n\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(undefined);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      ctrl.activate();\n    }\n  };\n\n  ctrl.isLocked = function(itemScope, itemIndex) {\n      var isLocked, item = ctrl.selected[itemIndex];\n\n      if (item && !angular.isUndefined(ctrl.lockChoiceExpression)) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression)); // force the boolean value\n          item._uiSelectChoiceLocked = isLocked; // store this for later reference\n      }\n\n      return isLocked;\n  };\n\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.sizeSearchInput = function() {\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.searchInput.parent().parent()[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft - 10;\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth+'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(angular.noop, function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        });\n      }\n    });\n  };\n\n  function _handleDropDownSelection(key) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) { ctrl.activeIndex++; }\n        break;\n      case KEY.UP:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex > 0 || (ctrl.search.length === 0 && ctrl.tagging.isActivated && ctrl.activeIndex > -1)) { ctrl.activeIndex--; }\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) ctrl.select(ctrl.items[ctrl.activeIndex], true);\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        ctrl.close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  // Bind to keyboard shortcuts\n  ctrl.searchInput.on('keydown', function(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC].indexOf(key)){\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    // if(~[KEY.ESC,KEY.TAB].indexOf(key)){\n    //   //TODO: SEGURO?\n    //   ctrl.close();\n    // }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        _handleDropDownSelection(key);\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) ctrl.select(newItem, true);\n            });\n          }\n        }\n      }\n\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      _ensureHighlightVisible();\n    }\n\n    if (key === KEY.ENTER || key === KEY.ESC) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n  });\n\n  ctrl.searchInput.on('paste', function (e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = [];\n        for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n          var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n          if (data.indexOf(separator) > -1) {\n            items = data.split(separator);\n            break;  // only split by one token\n          }\n        }\n        if (items.length === 0) {\n          items = [data];\n        }\n        if (items.length > 0) {\n        var oldsearch = ctrl.search;\n          angular.forEach(items, function (item) {\n            var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n            if (newItem) {\n              ctrl.select(newItem, true);\n            }\n          });\n          ctrl.search = oldsearch || EMPTY_SEARCH;\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  });\n\n  ctrl.searchInput.on('tagged', function() {\n    $timeout(function() {\n      _resetSearchInput();\n    });\n  });\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    if (ctrl.activeIndex < 0) {\n      return;\n    }\n\n    var highlighted = choices[ctrl.activeIndex];\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0)\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      else\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n    }\n  }\n\n  var onResize = $$uisDebounce(function() {\n    ctrl.sizeSearchInput();\n  }, 50);\n\n  angular.element($window).bind('resize', onResize);\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n    angular.element($window).off('resize', onResize);\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$compile', '$parse', '$timeout',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $compile, $parse, $timeout) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onMatchClickCallback = $parse(attrs.onMatchClick);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Limit the number of selections allowed\n        $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        if (angular.isDefined(attrs.multiple)) {\n\n          if(angular.isDefined(attrs.required) || (angular.isDefined(attrs.ngRequired) && attrs.ngRequired === \"true\")) {\n\n          // Custom validator to make required work with mulitple\n          // this pattern modeled after the way angular directly\n          // works with the requiredDirective\n          ngModel.$validators.uiRequired = function (modelValue, viewValue) {\n\n            // then we're dealing with multiple\n            if (Array.isArray(modelValue)) {\n              return modelValue.length > 0;\n            } else if (Array.isArray(viewValue)) {\n              return viewValue.length > 0;\n\n            // otherwise just check the direct model value\n            // for single selects\n            } else {\n              return modelValue !== undefined;\n            }\n\n            // we have to return a check directly.\n            // returning a variable can sometimes\n            // cause the check to return undefined\n            // to the $invalid and $valid properties\n            // due to the way angular parses the view.\n          };\n          attrs.$observe('required', function() {\n            ngModel.$validate();\n          });\n        }\n      }\n\n\n        scope.$watch('searchEnabled', function() {\n            var searchEnabled = scope.$eval(attrs.searchEnabled);\n            $select.searchEnabled = searchEnabled !== undefined ? searchEnabled : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('disabled', function() {\n          // No need to use $eval() (thanks to ng-disabled) since we already get a boolean instead of a string\n          $select.disabled = attrs.disabled !== undefined ? attrs.disabled : false;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)){\n          $timeout(function(){\n            $select.setFocus();\n          });\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)){\n          scope.$on(attrs.focusOn, function() {\n              $timeout(function(){\n                $select.setFocus();\n              });\n          });\n        }\n\n        function onDocumentClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], e.target);\n          } else {\n            contains = element[0].contains(e.target);\n          }\n\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(e.target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(e.target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        // See Click everywhere but here event http://stackoverflow.com/questions/12931369\n        $document.on('click', onDocumentClick);\n\n        scope.$on('$destroy', function() {\n          $document.off('click', onDocumentClick);\n        });\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n          transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n          transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n          if (transcludedNoChoice.length == 1) {\n            element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n          }\n        });\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody !== undefined ? appendToBody : uiSelectConfig.appendToBody) {\n          scope.$watch('$select.open', function(isOpen) {\n            if (isOpen) {\n              positionDropdown();\n            } else {\n              resetDropdown();\n            }\n          });\n\n          // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n          // it might stick around when the user routes away or the select field is otherwise removed\n          scope.$on('$destroy', function() {\n            resetDropdown();\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = offset.left + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function resetDropdown() {\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        // Support changing the direction of the dropdown if there isn't enough space to render it.\n        scope.$watch('$select.open', function() {\n          console.log(\"$select.open\");\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n\n        });\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n\n        };\n\n        scope.calculateDropdownPos = function(){\n\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n            if (dropdown.length === 0) {\n              return;\n            }\n\n            // Hide the dropdown so there is no flicker until $timeout is done executing.\n            dropdown[0].style.opacity = 0;\n\n            // Delay positioning the dropdown until all choices have been added so its height is correct.\n            $timeout(function(){\n\n              if ($select.dropdownPosition === 'up'){\n                  //Go UP\n                  setDropdownPosUp();\n\n              }else{ //AUTO\n\n                element.removeClass(directionUpClassName);\n\n                var offset = uisOffset(element);\n                var offsetDropdown = uisOffset(dropdown);\n\n                //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n                var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n                // Determine if the direction of the dropdown needs to be changed.\n                if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                  //Go UP\n                  setDropdownPosUp(offset, offsetDropdown);\n                }else{\n                  //Go DOWN\n                  setDropdownPosDown(offset, offsetDropdown);\n                }\n\n              }\n\n              // Display the dropdown once it has been positioned.\n              dropdown[0].style.opacity = 1;\n              console.log(\"Se intentará dar foco.\");\n              dropdown[0].focus(function() {\n                console.log(\"Se otorgo foco a dropdown.\");\n              });\n              console.log(dropdown[0]);\n            });\n          } else {\n              if (dropdown === null || dropdown.length === 0) {\n                return;\n              }\n\n              // Reset the position of the dropdown.\n              dropdown[0].style.position = '';\n              dropdown[0].style.top = '';\n              element.removeClass(directionUpClassName);\n          }\n        };\n      };\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      var parent = tElement.parent();\n      // Gets theme attribute from parent (ui-select)\n      var theme = getAttribute(parent, 'theme') || uiSelectConfig.theme;\n      var multi = angular.isDefined(getAttribute(parent, 'multiple'));\n\n      return theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');      \n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      function setAllowClear(allow) {\n        $select.allowClear = (angular.isDefined(allow)) ? (allow === '') ? true : (allow.toLowerCase() === 'true') : false;\n      }\n\n      attrs.$observe('allowClear', setAllowClear);\n      setAllowClear(attrs.allowClear);\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout', function(uiSelectMinErr, $timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        $select.refreshItems();\n        $select.sizeSearchInput();\n      };\n\n      //sets selected match index as new activeMatchIndex and triggers callback\n      ctrl.setActiveMatch = function(index) {\n        ctrl.activeMatchIndex = index;\n        var item = $select.selected[ctrl.activeMatchIndex];\n        if(item) {\n          var locals = {};\n          locals[$select.parserResult.itemName] = item;\n          $timeout(function () {\n            $select.onMatchClickCallback($scope, {\n              $item: item,\n              $model: $select.parserResult.modelMapper($scope, locals)\n            });\n          });\n        }\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        var removedChoice = $select.selected[index];\n\n        // if the choice is locked, can't remove it\n        if(removedChoice._uiSelectChoiceLocked) return;\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n      };\n\n      ctrl.getPlaceholder = function(){\n        //Refactor single?\n        if($select.selected && $select.selected.length) return;\n        return $select.placeholder;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n      $select.removeSelected = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          resultMultiple.unshift(result);\n        }\n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if(angular.isUndefined(ngModel.$viewValue) || ngModel.$viewValue === null){\n            $select.selected = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        });\n      });\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice(curr);\n                return prev;\n              }\n              // Select last item\n              else return last;\n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      $select.searchInput.on('keyup', function(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      });\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      $select.searchInput.on('blur', function() {\n        $timeout(function() {\n          $select.searchInput[0].value = \"\";\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      });\n\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        var locals = {},\n            result;\n        locals[$select.parserResult.itemName] = inputValue;\n        result = $select.parserResult.modelMapper(scope, locals);\n        return result;\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result === inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n\n      //Input that will handle focus\n      $select.focusInput = focusser;\n\n      element.parent().append(focusser);\n      focusser.bind(\"focus\", function(){\n        console.log(\"focus\");\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n      focusser.bind(\"blur\", function(){\n        console.log(\"blur\");\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n      focusser.bind(\"keydown\", function(e){\n        console.log(\"keydown\");\n        if (e.which === KEY.BACKSPACE) {\n          e.preventDefault();\n          e.stopPropagation();\n          $select.select(undefined);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          e.preventDefault();\n          e.stopPropagation();\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.bind(\"keyup input\", function(e){\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n\n      });\n\n\n    }\n  };\n}]);\n\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: ['^^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var $select = ctrls[0];\n      var $ngModel = ctrls[1];\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var removeClass = function(className) {\n        angular.forEach($select.$element.querySelectorAll('.' + className), function(el){\n          angular.element(el).removeClass(className);\n        });\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        $ngModel.$setViewValue(Date.now());\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content ui-select-dropdown dropdown-menu\\\" role=\\\"listbox\\\" ng-show=\\\"$select.open && $select.items.length > 0\\\"><li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"><div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div><div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\" role=\\\"option\\\"><a href=\\\"\\\" class=\\\"ui-select-choices-row-inner\\\"></a></div></li></ul>\");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><span ng-repeat=\\\"$item in $select.selected\\\"><span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.setActiveMatch($index);\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append=\\\"\\\"></span></span></span></span>\");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open && $select.searchEnabled\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"><span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': $select.allowClear && !$select.isEmpty()}\\\" ng-transclude=\\\"\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i> <a ng-show=\\\"$select.allowClear && !$select.isEmpty() && ($select.disabled !== true)\\\" aria-label=\\\"{{ $select.baseTitle }} clear\\\" style=\\\"margin-right: 10px\\\" ng-click=\\\"$select.clear($event)\\\" class=\\\"btn btn-xs btn-link pull-right\\\"><i class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></i></a></span></div>\");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length == 0\\\"><li ng-transclude=\\\"\\\"></li></ul>\");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"><div><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" ondrop=\\\"return false;\\\"></div><div class=\\\"ui-select-choices\\\"></div></div>\");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"form-control ui-select-search\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.searchEnabled && $select.open\\\"><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"><li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group) }\\\"><div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div><ul role=\\\"listbox\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group) }\\\"><li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $select.isActive(this), \\'select2-disabled\\': $select.isDisabled(this)}\\\"><div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div></li></ul></li></ul>\");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected\\\" ng-click=\\\"$selectMultiple.setActiveMatch($index);\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span uis-transclude-append=\\\"\\\"></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a></li></span>\");\n$templateCache.put(\"select2/match.tpl.html\",\"<a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude=\\\"\\\"></span> <abbr ng-if=\\\"$select.allowClear && !$select.isEmpty()\\\" class=\\\"select2-search-choice-close\\\" ng-click=\\\"$select.clear($event)\\\"></abbr> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span></a>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled}\\\"><ul class=\\\"select2-choices\\\"><span class=\\\"ui-select-match\\\"></span><li class=\\\"select2-search-field\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" ondrop=\\\"return false;\\\"></li></ul><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open || $select.items.length === 0}\\\"><div class=\\\"ui-select-choices\\\"></div></div></div>\");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled, \\'select2-container-active\\': $select.focus, \\'select2-allowclear\\': $select.allowClear && !$select.isEmpty()}\\\"><div class=\\\"ui-select-match\\\"></div><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"select2-search\\\" ng-show=\\\"$select.searchEnabled\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"></div><div class=\\\"ui-select-choices\\\"></div></div></div>\");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div ng-show=\\\"$select.open\\\" class=\\\"ui-select-choices ui-select-dropdown selectize-dropdown single\\\"><div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"><div class=\\\"ui-select-choices-group optgroup\\\" role=\\\"listbox\\\"><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div><div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\"><div class=\\\"option ui-select-choices-row-inner\\\" data-selectable=\\\"\\\"></div></div></div></div></div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"$select.searchEnabled && ($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.searchEnabled || ($select.selected && !$select.open)\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"></div><div class=\\\"ui-select-choices\\\"></div></div>\");}]);",null,null],"sourceRoot":"/source/"}
>>>>>>> Stashed changes
